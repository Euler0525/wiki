{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Euler0525@Wiki","text":"<ul> <li>You should blog even if you have no readers</li> <li>\u6b63\u4ea4\u4fe1\u53f7</li> </ul> <p>\u3010\u82f1\u6587\u7248\u3011A Quadrature Signals Tutorial: Complex, But Not Complicated</p> <p>\u3010\u4e2d\u6587\u7248\u3011\u6b63\u4ea4\u4fe1\u53f7\uff1a\u662f\u590d\u6570\uff0c\u4f46\u4e0d\u590d\u6742</p> <ul> <li> <p>Gigabyte Transceiver</p> </li> <li> <p>\u5982\u4f55\u8d85\u8fc7\u5927\u591a\u6570\u4eba</p> </li> </ul> <ul> <li>Once a problem is described in sufficient detail, its solution is obvious.</li> <li>In theory, theory and practice are the same. In practice, they\u2019re not.</li> <li>If debugging is the process of removing software bugs, then programming must be the process of putting them in.  \u2013 E. W. Dijkstra</li> <li>Premature optimization is the root of all evil!  \u2013 Donald Knuth</li> <li>It always takes longer than you expect, even when you take into account Hofstadter\u2019s Law.  \u2013 Hofstadter\u2019s Law</li> <li>Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.  \u2013 Brian Kernighan</li> </ul>"},{"location":"about/","title":"About","text":""},{"location":"ai/","title":"AI-Learning","text":""},{"location":"ai/#machine_learning","title":"Machine_Learning","text":""},{"location":"ai/#exp1-linear_regression","title":"exp1-Linear_Regression","text":""},{"location":"ai/#exp1-1","title":"exp1-1","text":""},{"location":"ai/#exp1-2","title":"exp1-2","text":""},{"location":"ai/#exp2-logistic_regression","title":"exp2-Logistic_Regression","text":""},{"location":"ai/#exp2-1","title":"exp2-1","text":""},{"location":"ai/#exp2-2","title":"exp2-2","text":""},{"location":"ai/#exp3-neural_networkfp","title":"exp3-Neural_Network(fp)","text":""},{"location":"ai/#exp3-1","title":"exp3-1","text":""},{"location":"ai/#exp3-2","title":"exp3-2","text":""},{"location":"ai/#exp4-neural_networkbp","title":"exp4-Neural_Network(bp)","text":""},{"location":"ai/#exp4-1","title":"exp4-1","text":""},{"location":"ai/#exp5-bias_vs_variance","title":"exp5-Bias_VS_Variance","text":""},{"location":"ai/#exp5-1","title":"exp5-1","text":""},{"location":"ai/#exp6-svm","title":"exp6-SVM","text":""},{"location":"ai/#exp6-1","title":"exp6-1","text":""},{"location":"ai/#exp6-2","title":"exp6-2","text":""},{"location":"ai/#exp6-3","title":"exp6-3","text":""},{"location":"ai/#exp6-4","title":"exp6-4","text":""},{"location":"ai/#exp7-k-means_and_pca","title":"exp7-K-means_And_PCA","text":""},{"location":"ai/#exp7-1","title":"exp7-1","text":""},{"location":"ai/#exp7-2","title":"exp7-2","text":""},{"location":"ai/#exp7-3","title":"exp7-3","text":""},{"location":"ai/#deep_learning","title":"Deep_Learning","text":""},{"location":"ai/#reference","title":"Reference","text":"<p>ladykaka007\u7684\u6295\u7a3f\u89c6\u9891</p>"},{"location":"algorithms/","title":"Algorithms","text":""},{"location":"algorithms/#graph-algorithms","title":"Graph Algorithms","text":""},{"location":"algorithms/#single-source-shortest-paths","title":"Single-Source Shortest Paths","text":""},{"location":"algorithms/#dijkstras-algorithm","title":"Dijkstra's Algorithm","text":"<p>We assume that \\(w(u, v) \\geq 0\\) for each edge \\((u, v)\\in E\\)</p> <pre><code>DIJKSTRA. (G,w,s)\n1 INITIALIZE-SINGLE-SOURCE(G,s)\n2 S=\u2205\n3 Q=G.V  // Q: min-priority queue\n4 while Q\u2260\u2205\n5   u=D EXTRACT-MIN(Q)\n6   S=S\u222a{u}\n7   for each vertex v\u2208G.Adj[u]\n8       RELAX(u,v,w)\n</code></pre> <pre><code>void dijkstra(vector&lt;vector&lt;pair&lt;int, int&gt;&gt;&gt; &amp;graph, int src) {\n    int n = graph.size();\n    vector&lt;int&gt; dist(n, INT_MAX);\n    // Sorted by distance, the vertices with smaller distance are ranked first.\n    priority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int, int&gt;&gt;,\n                   greater&lt;pair&lt;int, int&gt;&gt;&gt;\n        pq; // Store the vertices to be processed and their distance from the\n            // source point\n\n    pq.push({0, src});\n    dist[src] = 0;\n\n    // O((V+E)logV)\n    while (!pq.empty()) {\n        int u = pq.top().second;\n        pq.pop();\n\n        for (auto it : graph[u]) {\n            int v = it.first;\n            int weight = it.second;\n\n            if (dist[v] &gt; dist[u] + weight) {\n                dist[v] = dist[u] + weight;\n                pq.push({dist[v], v});\n            }\n        }\n    }\n\n    for (int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; i &lt;&lt; \"\\t\" &lt;&lt; dist[i] &lt;&lt; endl;\n    }\n}\n</code></pre> <pre><code>// Test Code\n#include &lt;climits&gt; // for INT_MAX\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;utility&gt; // for pair\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvoid dijkstra(vector&lt;vector&lt;pair&lt;int, int&gt;&gt;&gt; &amp;graph, int src);\n\nint main() {\n    // Adjacency table\n    vector&lt;vector&lt;pair&lt;int, int&gt;&gt;&gt; graph = {\n        {{1, 4}, {2, 3}}, {{2, 1}, {3, 2}}, {{3, 4}}, {}};\n    int src = 0;\n    dijkstra(graph, src);\n\n    return 0;\n}\n\nvoid dijkstra(vector&lt;vector&lt;pair&lt;int, int&gt;&gt;&gt; &amp;graph, int src) {\n    // ...\n}\n</code></pre>"},{"location":"algorithms/#reference","title":"Reference","text":"<p>[1] C. E. Leiserson, T. H. Cormen, R. L. Rivest, and C. Stein, \"Introduction to Algorithms, 3rd Edition,\" MIT Press, 2009.</p>"},{"location":"analog/","title":"Analog Devices Tutorials","text":""},{"location":"analog/#walt-kester-series","title":"Walt Kester Series","text":"<ul> <li>MT001\u2014Taking_the_Mystery_out_of_the_Infamous_Formula,SNR=6.02N+1.76dB,_and_Why_You_Should_Care\uff08\u63ed\u5f00\u4e00\u4e2a\u516c\u5f0f(SNR=6.02N+_1.76dB)\u7684\u795e\u79d8\u9762\u7eb1\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u4e88\u4ee5\u5173\u6ce8\uff09</li> <li>MT002\u2014What_the_Nyquist_Criterion_Means_to_Your_Sampled_Data_System_Design\uff08\u5948\u594e\u65af\u7279\u51c6\u5219\u5bf9\u6570\u636e\u91c7\u6837\u7cfb\u7edf\u8bbe\u8ba1\u6709\u4f55\u610f\u4e49\uff09</li> <li>MT003\u2014Understand_SINAD,ENOB,_SNR,_THD,_THD+N,_and_SFDR_so_You_Don't_Get_Lost_in_the_Noise_Floor\uff08\u4e86\u89e3SINAD\u3001ENOB\u3001SNR\u3001THD\u3001THD+_N\u3001SFDR\uff0c\u4e0d\u5728\u566a\u5e95\u4e2d\u8ff7\u5931\uff09</li> <li>MT004\u2014The_Good,_the_Bad,_and_the_Ugly_Aspects_of_ADC_Input_Noise\u2014Is_No_Noise_Good_Noise?\uff08ADC\u8f93\u5165\u566a\u58f0\u9762\u9762\u89c2\u2014\u566a\u58f0\u662f\u5229\u8fd8\u662f\u5f0a\uff1f\uff09</li> <li>MT005\u2014Noise_Power_Ratio_(NPR)\u2014A_65-Year_Old_Telephone_System_Specification_Finds_New_Life_in_Modern_Wireless_Applications\uff08\u566a\u58f0\u529f\u7387\u6bd4(NPR)\u2014\u62e5\u670965\u5e74\u5386\u53f2\u7684\u7535\u8bdd\u7cfb\u7edf\u53c2\u6570\u5728\u73b0\u4ee3\u65e0\u7ebf\u5e94\u7528\u4e2d\u91cd\u83b7\u65b0\u751f\uff09</li> <li>MT006\u2014ADC_Noise_Figure\u2014An_Often_Misunderstood_and_Misinterpreted_Specification\uff08ADC\u566a\u58f0\u7cfb\u6570\u2014\u4e00\u4e2a\u7ecf\u5e38\u88ab\u8bef\u89e3\u7684\u53c2\u6570\uff09</li> <li>MT007\u2014Aperture_Time,_Aperture_Jitter,_Aperture_Delay_Time\u2014Removing_the_Confusion\uff08\u5b54\u5f84\u65f6\u95f4\u3001\u5b54\u5f84\u6296\u52a8\u3001\u5b54\u5f84\u5ef6\u8fdf\u65f6\u95f4\u2014\u6b63\u672c\u6e05\u6e90\uff09</li> <li>MT008\u2014Converting_Oscillator_Phase_Noise_to_Time_Jitter\uff08\u5c06\u632f\u8361\u5668\u76f8\u4f4d\u566a\u58f0\u8f6c\u6362\u4e3a\u65f6\u95f4\u6296\u52a8\uff09</li> <li>MT009\u2014Data_Converter_Codes\u2014Can_You_Decode_Them?\uff08\u6570\u636e\u8f6c\u6362\u5668\u4ee3\u7801\u2014\u60a8\u80fd\u89e3\u8bd1\u8fd9\u4e9b\u4ee3\u7801\u5417\uff1f\uff09</li> <li>MT010\u2014The_Importance_of_Data_Converter_Static_Specifications\u2014Don't_Lose_Sight_of_the_Basics!\uff08\u6570\u636e\u8f6c\u6362\u5668\u9759\u6001\u7279\u6027\u7684\u91cd\u8981\u6027\u2014\u5343\u4e07\u522b\u5ffd\u89c6\u57fa\u672c\u7279\u6027\uff01\uff09</li> <li>MT011\u2014Find_Those_Elusive_ADC_Sparkle_Codes_and_Metastable_States\uff08\u627e\u51fa\u90a3\u4e9b\u96be\u4ee5\u7422\u78e8\u3001\u7a0d\u7eb5\u5373\u901d\u7684ADC\u95ea\u7801\u548c\u4e9a\u7a33\u72b6\u6001\uff09</li> <li>MT012\u2014Intermodulation_Distortion_Considerations_for_ADCs\uff08ADC\u9700\u8981\u8003\u8651\u7684\u4ea4\u8c03\u5931\u771f\u56e0\u7d20\uff09</li> <li>MT013\u2014Evaluating_High_Speed_DAC_Performance</li> <li>MT014\u2014Basic_DAC_Architectures_I:String_DACs_and_Thermometer(Fully_Decoded)_DACs\uff08DAC\u57fa\u672c\u67b6\u6784I\uff1aDAC\u4e32\u548c\u6e29\u5ea6\u8ba1\uff08\u5b8c\u5168\u89e3\u7801\uff09DAC\uff09</li> <li>MT015\u2014Basic_DAC_Architectures_II:_Binary_DACs\uff08DAC\u57fa\u672c\u67b6\u6784II\uff1a\u4e8c\u8fdb\u5236DAC\uff09</li> <li>MT016\u2014Basic_DAC_Architectures_III:_Segmented_DACs\uff08\u57fa\u672cDAC\u67b6\u6784III\uff1a\u5206\u6bb5DAC\uff09</li> <li>MT017\u2014Oversampling_Interpolating_DACs\uff08\u8fc7\u91c7\u6837\u63d2\u503cDAC\uff09</li> <li>MT018\u2014Intentionally_Nonlinear_DACs\uff08\u6709\u610f\u4e3a\u4e4b\u7684\u975e\u7ebf\u6027DAC\uff09</li> <li>MT019\u2014DAC_Interface_Fundamentals\uff08DAC\u63a5\u53e3\u57fa\u672c\u539f\u7406\uff09</li> <li>MT020\u2014ADC_Architectures_I:_The_Flash_Converter\uff08ADC\u67b6\u6784I\uff1aFlash\u8f6c\u6362\u5668\uff09</li> <li>MT021\u2014ADC_Architectures_II:_Successive_Approximation_ADCs\uff08ADC\u67b6\u6784II\uff1a\u9010\u6b21\u903c\u8fd1\u578bADC\uff09</li> <li>MT022\u2014ADC_Architectures_III:_Sigma-Delta_ADC_Basics\uff08ADC\u67b6\u6784III\uff1a\u03a3-\u0394\u578bADC\u57fa\u7840\uff09</li> <li>MT023\u2014ADC_Architectures_IV:_Sigma-Delta_ADC_Advanced_Concepts_and_Applications</li> <li>MT024\u2014ADC_Architectures_V:_Pipelined_Subranging_ADCs\uff08ADC\u67b6\u6784V\uff1a\u6d41\u6c34\u7ebf\u5f0f\u5206\u7ea7ADC\uff09</li> <li>MT025\u2014ADC_Architectures_VI:_Folding_ADCs\uff08ADC\u67b6\u6784VI\uff1a\u6298\u53e0\u578bADC\uff09</li> <li>MT026\u2014ADC_Architectures_VII:_Counting_ADCs\uff08ADC\u67b6\u6784VII\uff1a\u8ba1\u6570ADC\uff09</li> <li>MT027\u2014ADC_Architectures_VIII:_Integrating_ADCs\uff08ADC\u67b6\u6784VIII\uff1a\u96c6\u6210ADC\uff09</li> <li>MT028\u2014Voltage-to-Frequency_Converters\uff08\u7535\u538b\u9891\u7387\u8f6c\u6362\u5668\uff09</li> <li>MT029\u2014Optical_Encoders\uff08\u5149\u5b66\u7f16\u7801\u5668\uff09</li> <li>MT030\u2014Resolver-to-Digital_Converters</li> <li>MT031\u2014Grounding_Data_Converters_and_Solving_the_Mystery_of_\u201cAGND\u201dand\u201cDGND\u201d\uff08\u5b9e\u73b0\u6570\u636e\u8f6c\u6362\u5668\u7684\u63a5\u5730\u5e76\u89e3\u5f00\u201cAGND\u201d\u548c\u201cDGND\u201d\u7684\u8c1c\u56e2\uff09</li> </ul>"},{"location":"analog/#opamp-series","title":"Opamp Series","text":"<ul> <li>MT032\u2014Ideal_Voltage_Feedback_(VFB)_Op_Amp\uff08\u7406\u60f3\u7684\u7535\u538b\u53cd\u9988\u578b(VFB)\u8fd0\u7b97\u653e\u5927\u5668\uff09</li> <li>MT033\u2014Voltage_Feedback_Op_Amp_Gain_and_Bandwidth\uff08\u7535\u538b\u53cd\u9988\u578b\u8fd0\u7b97\u653e\u5927\u5668\u7684\u589e\u76ca\u548c\u5e26\u5bbd\uff09</li> <li>MT034\u2014Current_Feedback_(CFB)_Op_Amps\uff08\u7535\u6d41\u53cd\u9988(CFB)\u8fd0\u7b97\u653e\u5927\u5668\uff09</li> <li>MT035\u2014Op_Amp_Inputs,_Outputs,_Single-Supply,_and_Rail-to-Rail_Issues\uff08\u8fd0\u7b97\u653e\u5927\u5668\u8f93\u5165\u3001\u8f93\u51fa\u3001\u5355\u7535\u6e90\u548c\u8f68\u5230\u8f68\u95ee\u9898\uff09</li> <li>MT036\u2014Op_Amp_Output_Phase-Reversal_and_Input_Over-Voltage_Protection\uff08\u8fd0\u7b97\u653e\u5927\u5668\u8f93\u51fa\u76f8\u4f4d\u53cd\u8f6c\u548c\u8f93\u5165\u8fc7\u538b\u4fdd\u62a4\uff09</li> <li>MT037\u2014Op_Amp_Input_Offset_Voltage\uff08\u8fd0\u7b97\u653e\u5927\u5668\u8f93\u5165\u5931\u8c03\u7535\u538b\uff09</li> <li>MT038\u2014Op_Amp_Input_Bias_Current\uff08\u8fd0\u7b97\u653e\u5927\u5668\u8f93\u5165\u504f\u7f6e\u7535\u6d41\uff09</li> <li>MT039\u2014Op_Amp_Total_Output_Offset_Voltage_Calculations\uff08\u8fd0\u7b97\u653e\u5927\u5668\u603b\u8f93\u51fa\u5931\u8c03\u7535\u538b\u8ba1\u7b97\uff09</li> <li>MT040\u2014Op_Amp_Input_Impedance\uff08\u8fd0\u7b97\u653e\u5927\u5668\u8f93\u5165\u963b\u6297\uff09</li> <li>MT041\u2014Op_Amp_Input_and_Output_Common-Mode_and_Differential_Voltage_Range\uff08\u8fd0\u7b97\u653e\u5927\u5668\u8f93\u5165\u548c\u8f93\u51fa\u5171\u6a21\u4e0e\u5dee\u5206\u7535\u538b\u8303\u56f4\uff09</li> <li>MT042\u2014Op_Amp_Common-Mode_Rejection_Ratio_(CMRR)\uff08\u8fd0\u7b97\u653e\u5927\u5668\u5171\u6a21\u6291\u5236\u6bd4(CMRR)\uff09</li> <li>MT043\u2014Op_Amp_Power_Supply_Rejection_Ratio_(PSRR)_and_Supply_Voltages\uff08\u8fd0\u7b97\u653e\u5927\u5668\u7535\u6e90\u6291\u5236\u6bd4(PSRR)\u4e0e\u7535\u6e90\u7535\u538b\uff09</li> <li>MT044\u2014Op_Amp_Open-Loop_Gain_and_Open-_Loop_Gain_Nonlinearity\uff08\u8fd0\u7b97\u653e\u5927\u5668\u5f00\u73af\u589e\u76ca\u4e0e\u5f00\u73af\u589e\u76ca\u975e\u7ebf\u6027\uff09</li> <li>MT045\u2014Op_Amp_Bandwidth_and_Bandwidth_Flatness\uff08\u8fd0\u7b97\u653e\u5927\u5668\u5e26\u5bbd\u548c\u5e26\u5bbd\u5e73\u5766\u5ea6\uff09</li> <li>MT046\u2014Op_Amp_Settling_Time\uff08\u8fd0\u7b97\u653e\u5927\u5668\u5efa\u7acb\u65f6\u95f4\uff09</li> <li>MT047\u2014Op_Amp_Noise\uff08\u8fd0\u7b97\u653e\u5927\u5668\u566a\u58f0\uff09</li> <li>MT048\u2014Op_Amp_Noise_Relationships_1f_Noise,_RMS_Noise,_and_Equivalent_Noise_Bandwidth\uff08\u8fd0\u7b97\u653e\u5927\u5668\u566a\u58f0\u5173\u7cfb\uff1a1/f\u566a\u58f0\u3001\u5747\u65b9\u6839(RMS)\u566a\u58f0\u4e0e\u7b49\u6548\u566a\u58f0\u5e26\u5bbd\uff09</li> <li>MT049\u2014Op_Amp_Total_Output_Noise_Calculations_for_Single-Pole_System\uff08\u5355\u6781\u70b9\u7cfb\u7edf\u7684\u8fd0\u7b97\u653e\u5927\u5668\u603b\u8f93\u51fa\u566a\u58f0\u8ba1\u7b97\uff09</li> <li>MT050\u2014Op_Amp_Total_Output_Noise_Calculations_for_Second-Order_System\uff08\u4e8c\u9636\u7cfb\u7edf\u7684\u8fd0\u7b97\u653e\u5927\u5668\u603b\u8f93\u51fa\u566a\u58f0\u8ba1\u7b97\uff09</li> <li>MT051\u2014Current_Feedback_Op_Amp_Noise_Considerations\uff08\u7535\u6d41\u53cd\u9988\u8fd0\u7b97\u653e\u5927\u5668\u566a\u58f0\u8003\u8651\u56e0\u7d20\uff09</li> <li>MT052\u2014Op_Amp_Noise_Figure:_Don\u2019t_Be_Mislead\uff08\u8fd0\u7b97\u653e\u5927\u5668\u566a\u58f0\u6307\u6570\uff1a\u4e0d\u8981\u88ab\u8bef\u5bfc\uff09</li> <li>MT053\u2014Op_Amp_Distortion:HD,_THD,_THD+N,_IMD,_SFDR,_MTPR\uff08\u8fd0\u7b97\u653e\u5927\u5668\u5931\u771f\uff1aHD\u3001THD\u3001THD+_N\u3001IMD\u3001SFDR\u3001MTPR\uff09</li> <li>MT054\u2014Precision_Op_Amps\uff08\u7cbe\u5bc6\u8fd0\u7b97\u653e\u5927\u5668\uff09</li> <li>MT055\u2014Chopper_Stabilized_(Auto-Zero)_Precision_Op_Amps\uff08\u65a9\u6ce2\u7a33\u5b9a(\u81ea\u7a33\u96f6)\u7cbe\u5bc6\u8fd0\u7b97\u653e\u5927\u5668\uff09</li> <li>MT056\u2014High_Speed_Voltage_Feedback_Op_Amps\uff08\u9ad8\u901f\u7535\u538b\u53cd\u9988\u8fd0\u7b97\u653e\u5927\u5668\uff09</li> <li>MT057\u2014High_Speed_Current_Feedback_Op_Amps\uff08\u9ad8\u901f\u7535\u6d41\u53cd\u9988\u8fd0\u7b97\u653e\u5927\u5668\uff09</li> <li>MT058\u2014Effects_of_Feedback_Capacitance_on_VFB_and_CFB_Op_Amps\uff08\u53cd\u9988\u7535\u5bb9\u5bf9VFB\u548cCFB\u8fd0\u7b97\u653e\u5927\u5668\u7684\u5f71\u54cd\uff09</li> <li>MT059\u2014Compensating_for_the_Effects_of_Input_Capacitance_on_VFB_and_CFB_Op_Amps_Used_in_Current-to-Voltage_Converters\uff08\u8865\u507f\u8f93\u5165\u7535\u5bb9\u5bf9\u7535\u6d41\u7535\u538b\u8f6c\u6362\u5668\u6240\u7528\u7535\u538b\u53cd\u9988\u548c\u7535\u6d41\u53cd\u9988\u578b\u8fd0\u7b97\u653e\u5927\u5668\u7684\u5f71\u54cd\uff09</li> <li>MT060\u2014Choosing_Between_Voltage_Feedback_(VFB)and_Current_Feedback(CFB)_Op_Amps\uff08\u5728\u7535\u538b\u53cd\u9988(VFB)\u548c\u7535\u6d41\u53cd\u9988(CFB\u8fd0\u7b97\u653e\u5927\u5668\u4e4b\u95f4\u9009\u62e9\uff09</li> </ul>"},{"location":"analog/#in-amp-series","title":"In-Amp Series","text":"<ul> <li>MT061\u2014Instrumentation_Amplifier_(In-Amp)_Basics</li> <li>MT062\u2014Basic_Two_Op_Amp_In-Amp_Configuration</li> <li>MT063\u2014Basic_Three_Op_Amp_In-Amp_Configuration</li> <li>MT064\u2014In-Amp_DC_Error_Sources\uff08\u4eea\u8868\u653e\u5927\u5668\u76f4\u6d41\u8bef\u5dee\u6e90\uff09</li> <li>MT065\u2014In-Amp_Noise\uff08\u4eea\u8868\u653e\u5927\u5668\u566a\u58f0\uff09</li> <li>MT066\u2014In-Amp_Bridge_Circuit_Error_Budget_Analysis\uff08\u4eea\u8868\u653e\u5927\u5668\u6865\u63a5\u7535\u8def\u8bef\u5dee\u9884\u7b97\u5206\u6790\uff09</li> <li>MT067\u2014Auto-Zero_In_Amps\uff08\u81ea\u7a33\u96f6\u4eea\u8868\u653e\u5927\u5668\uff09</li> <li>MT068\u2014Difference_and_Current_Sense_Amplifiers\uff08\u5dee\u52a8\u653e\u5927\u5668\u548c\u7535\u6d41\u68c0\u6d4b\u653e\u5927\u5668\uff09</li> <li>MT069\u2014In-Amp_Input_Overvoltage_Protection\uff08\u4eea\u8868\u653e\u5927\u5668\u8f93\u5165\u8fc7\u538b\u4fdd\u62a4 \uff09</li> <li>MT070\u2014In-Amp_Input_RFI_Protection\uff08\u4eea\u8868\u653e\u5927\u5668\u8f93\u5165RFI\u4fdd\u62a4\uff09</li> </ul>"},{"location":"analog/#other-stuff","title":"Other Stuff\u2026","text":"<ul> <li>MT071\u2014Analog_Isolation_Amplifiers\uff08\u6a21\u62df\u9694\u79bb\u653e\u5927\u5668\uff09</li> <li>MT072\u2014Precision_Variable_Gain_Amplifiers(VGAs)\uff08\u7cbe\u5bc6\u53ef\u53d8\u589e\u76ca\u653e\u5927\u5668(VGA)\uff09</li> <li>MT073\u2014High_Speed_Variable_Gain_Amplifiers(VGAs)\uff08\u9ad8\u901f\u53ef\u53d8\u589e\u76ca\u653e\u5927\u5668(VGA)\uff09</li> <li>MT074\u2014Differential_Drivers_for_Precision_ADCs\uff08\u7cbe\u5bc6ADC\u7528\u5dee\u5206\u9a71\u52a8\u5668\uff09</li> <li>MT075\u2014Differential_Drivers_for_High_Speed_ADCs_Overview</li> <li>MT076\u2014Differential_Driver_Analysis\uff08\u5dee\u5206\u9a71\u52a8\u5668\u5206\u6790\uff09</li> <li>MT077\u2014Log_Amp_Basics\uff08\u5bf9\u6570\u653e\u5927\u5668\u57fa\u7840\u77e5\u8bc6\uff09</li> <li>MT078\u2014High_Frequency_Log_Amps\uff08\u9ad8\u9891\u5bf9\u6570\u653e\u5927\u5668\uff09</li> <li>MT079\u2014Analog_Multipliers\uff08\u6a21\u62df\u4e58\u6cd5\u5668\uff09</li> <li>MT080\u2014Mixers_and_Modulators\uff08\u6df7\u9891\u5668\u548c\u8c03\u5236\u5668\uff09</li> <li>MT081\u2014RMS-to-DC_Converters</li> <li>MT082\u2014RF_RMS_Power_Detectors(TruPwrTM)</li> <li>MT083\u2014Comparators\uff08\u6bd4\u8f83\u5668\uff09</li> <li>MT084\u2014Using_Op_Amps_As_Comparators\uff08\u5c06\u8fd0\u7b97\u653e\u5927\u5668\u7528\u4f5c\u6bd4\u8f83\u5668\uff09</li> <li>MT085\u2014Fundamentals_of_Direct_Digital_Synthesis(DDS)\uff08\u76f4\u63a5\u6570\u5b57\u9891\u7387\u5408\u6210(DDS)\u57fa\u672c\u539f\u7406\uff09</li> <li>MT086\u2014Fundamentals_of_Phase_Locked_Loops(PLLs)\uff08\u9501\u76f8\u73af(PLL)\u57fa\u672c\u539f\u7406\uff09</li> <li>MT087\u2014Voltage_References\uff08\u57fa\u51c6\u7535\u538b\u6e90\uff09</li> <li>MT088\u2014Analog_Switches_and_Multiplexers_Basics\uff08\u6a21\u62df\u5f00\u5173\u548c\u591a\u8def\u590d\u7528\u5668\u57fa\u672c\u77e5\u8bc6\uff09</li> <li>MT089\u2014Video_Multiplexers_and_Crosspoint_Switches\uff08\u89c6\u9891\u591a\u8def\u590d\u7528\u5668\u548c\u4ea4\u53c9\u70b9\u5f00\u5173\uff09</li> <li>MT090\u2014Sample-and-Hold_Amplifiers\uff08\u91c7\u6837\u4fdd\u6301\u653e\u5927\u5668\uff09</li> <li>MT091\u2014Digital_Potentiometers\uff08\u6570\u5b57\u7535\u4f4d\u8ba1\uff09</li> <li>MT092\u2014Electrostatic_Discharge(ESD)\uff08\u9759\u7535\u653e\u7535(ESD)\uff09</li> <li>MT093\u2014Thermal_Design_Basics\uff08\u6563\u70ed\u8bbe\u8ba1\u57fa\u7840\uff09</li> <li>MT094\u2014Microstrip_and_Stripline_Design\uff08\u5fae\u5e26\u7ebf\u548c\u5e26\u72b6\u7ebf\u8bbe\u8ba1\uff09</li> <li>MT095\u2014EMI,_RFI,_and_Shielding_Concepts\uff08EMI\u3001RFI\u548c\u5c4f\u853d\u6982\u5ff5\uff09</li> <li>MT096\u2014RFI_Rectification_Concepts\uff08RFI\u6574\u6d41\u539f\u7406\uff09</li> <li>MT097\u2014Dealing_with_High-Speed_Logic</li> <li>MT098\u2014Low_Voltage_Logic_Interfacing\uff08\u4f4e\u7535\u538b\u903b\u8f91\u63a5\u53e3\uff09</li> <li>MT099\u2014Analog_Circuit_Simulation</li> <li>MT100\u2014Breadboarding_and_Prototyping_Techniques</li> <li>MT101\u2014Decoupling_Techniques\uff08\u53bb\u8026\u6280\u672f\uff09</li> <li>MT200\u2014Minimizing_Jitter_in_ADC_Clock_Interfaces\uff08\u964d\u4f4eADC\u65f6\u949f\u63a5\u53e3\u6296\u52a8\uff09</li> <li>MT201\u2014Interfacing_FPGAs_to_an_ADC_Converter\u2019s_Digital_Data_Output\uff08FPGA\u4e0eADC\u6570\u5b57\u6570\u636e\u8f93\u51fa\u7684\u63a5\u53e3\uff09</li> </ul>"},{"location":"analog/#filter-series","title":"Filter Series","text":"<ul> <li>MT202\u2014Allpass_Filters\uff08\u5168\u901a\u6ee4\u6ce2\u5668 \uff09</li> <li>MT203\u2014Bainter_Notch_Filters\uff08Bainter\u9677\u6ce2\u6ee4\u6ce2\u5668\uff09</li> <li>MT204\u2014The_Bessel_Response\uff08\u8d1d\u585e\u5c14\u54cd\u5e94\uff09</li> <li>MT205\u2014Biquadratic(Biquad)Filters</li> <li>MT206\u2014The_Chebyshev_Response\uff08\u5207\u6bd4\u96ea\u592b\u54cd\u5e94 \uff09</li> <li>MT207\u2014Amplifier_Classes\uff08\u653e\u5927\u5668\u7c7b\u578b\uff09</li> <li>MT208\u2014Digitally_Programmed_State_Variable_Filter\uff08\u6570\u5b57\u7f16\u7a0b\u72b6\u6001\u53d8\u91cf\u6ee4\u6ce2\u5668\uff09</li> <li>MT209\u2014Dual_Amplifier_Band-Pass(DABP)Filter</li> <li>MT210\u2014F0_and_Q_in_Filters\uff08\u6ee4\u6ce2\u5668\u4e2d\u7684F0\u548cQ\uff09</li> <li>MT211\u2014Full_Wave_Rectifier\uff08\u5168\u6ce2\u6574\u6d41\u5668\uff09</li> <li>MT212\u2014Half_Wave_Rectifier\uff08\u534a\u6ce2\u6574\u6d41\u5668\uff09</li> <li>MT213\u2014Inverting_Amplifier\uff08\u53cd\u76f8\u653e\u5927\u5668\uff09</li> <li>MT214\u2014Inverting_Summing_Amplifier\uff08\u53cd\u76f8\u6c42\u548c\u653e\u5927\u5668\uff09</li> <li>MT215\u2014Low-Pass_to_Band-Pass_Filter_Transformation\uff08\u4ece\u4f4e\u901a\u5230\u5e26\u901a\u6ee4\u6ce2\u5668\u7684\u8f6c\u6362\uff09</li> <li>MT216\u2014Low-Pass_to_Band-Reject(Notch)Filter_Transformation\uff08\u4ece\u4f4e\u901a\u5230\u5e26\u963b(\u9677\u6ce2)\u6ee4\u6ce2\u5668\u7684\u8f6c\u6362\uff09</li> <li>MT217\u2014Low-Pass_to_High-Pass_Filter_Transformation\uff08\u4ece\u4f4e\u901a\u5230\u9ad8\u901a\u6ee4\u6ce2\u5668\u7684\u8f6c\u6362\uff09</li> <li>MT218\u2014Multiple_Feedback_Band-Pass_Design_Example</li> <li>MT220\u2014Multiple_Feedback_Filters\uff08\u591a\u53cd\u9988\u6ee4\u6ce2\u5668\uff09</li> <li>MT222\u2014Sallen-Key_Filters</li> <li>MT223\u2014State_Variable_Filters\uff08\u72b6\u6001\u53d8\u91cf\u6ee4\u6ce2\u5668\uff09</li> <li>MT224\u2014The_Butterworth_Response\uff08\u5df4\u7279\u6c83\u5179\u54cd\u5e94\uff09</li> <li>MT225\u2014Twin_T_Notch_Filter\uff08\u53ccT\u9677\u6ce2\u6ee4\u6ce2\u5668\uff09</li> <li>MT226\u2014An_Engineering_Manager\u2019s_First_Experience_with_Multisim\uff08\u5de5\u7a0b\u7ecf\u7406\u521d\u6b21\u4f7f\u7528Multisim \uff09</li> <li>MT227\u2014Operating_a_Typical_High_Speed_ADC_Evaluation_Board_Setup\uff08\u8fd0\u884c\u5178\u578b\u9ad8\u901fADC\u8bc4\u4f30\u677f\u8bbe\u7f6e\uff09</li> <li>MT228\u2014High_Speed_ADC_Analog_Input_Interface_Considerations\uff08\u9ad8\u901fADC\u6a21\u62df\u8f93\u5165\u63a5\u53e3\u8003\u8651\uff09</li> <li>MT229\u2014Quantization_Noise_An_Expanded_Derivation_of_the_Equation,SNR=6.02_N+1.76_dB\uff08\u91cf\u5316\u566a\u58f0\uff1a\u516c\u5f0fSNR=6.02_N+_1.76_dB\u7684\u6269\u5c55\u63a8\u5bfc\uff09</li> <li>MT230\u2014Noise_Considerations_in_High_Speed_Converter_Signal_Chains</li> </ul>"},{"location":"apps/","title":"Apps","text":"<p>x-cmd</p> <pre><code>eval \"$(curl https://get.x-cmd.com)\"\nx upgrade\n</code></pre> <ul> <li>bit</li> <li>fd</li> </ul>"},{"location":"apps/#_1","title":"Apps","text":"<ul> <li> <p>010Editor</p> </li> <li> <p>7-zip</p> </li> </ul>"},{"location":"apps/#a","title":"A","text":"<ul> <li> <p>Adobe</p> </li> <li> <p>AriaNgGUI</p> </li> </ul>"},{"location":"apps/#b","title":"B","text":"<ul> <li> <p>BurpSuite</p> </li> <li> <p>\u767e\u5ea6\u7f51\u76d8</p> </li> </ul>"},{"location":"apps/#c","title":"C","text":"<ul> <li> <p>Circuit Design Suite Multisim</p> </li> <li> <p>Clash for Windows</p> </li> <li> <p>ContextMenuManager</p> </li> <li> <p>ctags</p> </li> </ul>"},{"location":"apps/#d","title":"D","text":"<ul> <li> <p>DingTalk</p> </li> <li> <p>DiskGenius</p> </li> <li> <p>Docker Desktop</p> </li> <li> <p>Dynamic Theme(Microsoft Store)</p> </li> </ul>"},{"location":"apps/#e","title":"E","text":"<ul> <li> <p>Edraw</p> </li> <li> <p>EnigmaVirtualBox</p> </li> <li> <p>Everything</p> </li> </ul>"},{"location":"apps/#f","title":"F","text":"<ul> <li> <p>File Converter</p> </li> <li> <p>FFmpeg</p> </li> </ul>"},{"location":"apps/#g","title":"G","text":"<ul> <li>GeoGebra</li> </ul>"},{"location":"apps/#h","title":"H","text":"<ul> <li>\u706b\u7ed2\u5b89\u5168</li> </ul>"},{"location":"apps/#i","title":"I","text":"<ul> <li> <p>IDA</p> </li> <li> <p>IDM</p> </li> <li> <p>IObit Unlocker</p> </li> <li> <p>iTubeGo</p> </li> </ul>"},{"location":"apps/#j","title":"J","text":"<ul> <li>JEB</li> </ul>"},{"location":"apps/#l","title":"L","text":"<ul> <li> <p>Lazygit</p> </li> <li> <p>lx-music</p> </li> </ul>"},{"location":"apps/#m","title":"M","text":"<ul> <li> <p>MATLAB</p> </li> <li> <p>Maple</p> </li> <li> <p>MinGW</p> </li> <li> <p>Motrix</p> </li> <li> <p>ModelSim</p> </li> <li> <p>Multisim</p> </li> </ul>"},{"location":"apps/#n","title":"N","text":"<ul> <li> <p>NetAssit</p> </li> <li> <p>Nodepad++</p> </li> </ul>"},{"location":"apps/#o","title":"O","text":"<ul> <li> <p>OBS Studio</p> </li> <li> <p>Oracle_Database</p> </li> </ul>"},{"location":"apps/#p","title":"P","text":"<ul> <li> <p>PalmInput</p> </li> <li> <p>PicGo</p> </li> <li> <p>PicPick</p> </li> <li> <p>PotPlayer</p> </li> <li> <p>PowerToys</p> </li> </ul>"},{"location":"apps/#q","title":"Q","text":"<ul> <li> <p>QuickLook(Microsoft Store)</p> </li> <li> <p>qBittorrent</p> </li> <li> <p>Quarto</p> </li> </ul>"},{"location":"apps/#r","title":"R","text":"<ul> <li> <p>RaiDrive</p> </li> <li> <p>Rufus</p> </li> </ul>"},{"location":"apps/#s","title":"S","text":"<ul> <li>SciHub</li> <li>ScreenToGif</li> <li>Serial Debug Assistant(Microsoft Store)</li> <li>STM32CubeIDE</li> <li>STM32CubeCLT</li> <li>STM32CubeMX</li> <li>STMCUFinder</li> <li>\u95ea\u79d2\u4e91</li> </ul>"},{"location":"apps/#t","title":"T","text":"<ul> <li> <p>Terminal(Microsoft Store)</p> </li> <li> <p>Tex Live</p> </li> <li> <p>Thunderbird</p> </li> <li> <p>Typora(Priv.txt)</p> </li> </ul>"},{"location":"apps/#u","title":"U","text":"<ul> <li> <p>UartAssist</p> </li> <li> <p>uTools</p> </li> </ul>"},{"location":"apps/#v","title":"V","text":"<ul> <li> <p>Visual Studio</p> </li> <li> <p>VS Code</p> </li> <li> <p>VMware</p> </li> </ul> <p>ZF3RO-FHED2-M80TY-8QYGC-NPKYF</p> <p>YF390-OHF8P-M81RQ-2DXQE-M2UT6</p> <p>ZF71R-DMX85-08DQY-8YMNC-PPHV8</p>"},{"location":"apps/#w","title":"W","text":"<ul> <li> <p>WinSCP</p> </li> <li> <p>Wireshark</p> </li> <li> <p>WPS</p> </li> <li> <p>WSL</p> </li> <li> <p>WeChat</p> </li> </ul>"},{"location":"apps/#x","title":"X","text":"<ul> <li> <p>x32/64dbg</p> </li> <li> <p>XcXsrv</p> </li> <li> <p>Xilinx Vivado</p> </li> </ul>"},{"location":"apps/#z","title":"Z","text":"<ul> <li>Zotero</li> </ul>"},{"location":"config/","title":"Configuration","text":""},{"location":"config/#sourcelist","title":"source.list","text":"<pre><code># Ubuntu20.04\n$ sudo vim /etc/apt/sources.list\n\n# tuna.tsinghua\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse \n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse \ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse \n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse \ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse \n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse \ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse \n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse\n\n# aliyun\ndeb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse \ndeb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse \ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse\n\n# ustc\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse \ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse \ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse \ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse \ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse \ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse \ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse \ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse \ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse \ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse\n</code></pre>"},{"location":"config/#ssh","title":"SSH","text":"<pre><code>$ sudo apt update\n$ sudo apt install openssh-server -y\n$ sudo ps -e | grep ssh\n$ sudo service ssh start\n$ sudo systemctl enable --now ssh\n$ sudo vim /etc/ssh/sshd_config  # PermitRootLogin yes\n$ sudo service sshd start\n# \u5f00\u673a\u81ea\u542f\n$ sudo systemctl enable ssh\n$ reboot\n</code></pre>"},{"location":"config/#zshpowerlevel10k","title":"zsh&amp;Powerlevel10k","text":""},{"location":"config/#oh-my-zsh","title":"oh-my-zsh","text":"<pre><code>$ sudo apt-get install zsh\n$ sh -c \"$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)\"\n$ chsh -s /bin/zsh  # \u4fee\u6539\u9ed8\u8ba4\u7ec8\u7aef\u4e3azsh\n\n$ git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k  # \u5b89\u88c5Powerlevel10k\n$ vim ~/.zshrc # \u4fee\u6539ZSH_THEME=\"powerlevel10k/powerlevel10k\"\n</code></pre>"},{"location":"config/#plug-ins","title":"Plug-ins","text":"<pre><code># zsh-autosuggestions\n$ git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n# zsh-syntax-highlighting\n$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\n$ vim ~/.zshrc\n# plugins=(git zsh-autosuggestions zsh-syntax-highlighting)\n$ source ~/.zshrc\n</code></pre>"},{"location":"config/#conda","title":"Conda","text":""},{"location":"config/#installation","title":"Installation","text":"<pre><code>$ cd ~/Download\n$ wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.02-1-Linux-x86_64.sh\n$ bash Anaconda3-2024.02-1-Linux-x86_64.sh\n$ conda update -n base -c defaults conda  # \u66f4\u65b0\uff08\u7b2c\u4e00\u6b21\u5b89\u88c5\u4e0d\u9700\u8981\uff09\n$ source ~/.bashrc  # \u82e5\u4e3a.zshrc\u9700\u8981\u6dfb\u52a0 export PATH=/home/username/anaconda3/bin:$PATH\n$ conda config --set auto_activate_base false  # \u53d6\u6d88\u81ea\u52a8\u6fc0\u6d3b\n\n# Source\n$ vim.condarc\nchannels:\n  - defaults\nshow_channel_urls: true\nchannel_alias: https://mirrors.tuna.tsinghua.edu.cn/anaconda\ndefault_channels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\nauto_activate_base: true\n</code></pre>"},{"location":"config/#env","title":"env","text":"<pre><code>$ conda create -n python3 python=3.10  # \u521b\u5efa\u865a\u62df\u73af\u5883\n$ source activate python3  # \u6fc0\u6d3b\u865a\u62df\u73af\u5883\n$ conda remove -n python3 --all  # \u5220\u9664\u865a\u62df\u73af\u5883\n$ conda env list  # \u67e5\u770b\u865a\u62df\u73af\u5883\n</code></pre>"},{"location":"config/#git","title":"Git","text":"<pre><code>$ sudo git apt install git\n</code></pre>"},{"location":"config/#gitgithub","title":"Git&amp;GitHub","text":"<pre><code># user.name &amp; user.email\ngit config --global user.name \"\"           # git config user.name  \u67e5\u770b\u7528\u6237\u540d\ngit config --global user.email \"\"  # git config user.email \u67e5\u770b\u90ae\u7bb1\nssh-keygen -t rsa -C \"\"\n</code></pre> <ul> <li>\u5728GitHub\u4e2d\u6dfb\u52a0\u516c\u94a5</li> </ul> <p>\u5728\u7528\u6237\u540d\u76ee\u5f55\u4e0b\u7684<code>.ssh</code>\u76ee\u5f55\u4e0b<code>cat id_rsa.pub</code>\uff0c\u5c06\u5185\u5bb9\u590d\u5236\uff1b</p> <p>\u8fdb\u5165GitHub-setting-SSH and GPG keys-New SSH key\uff1b</p> <p>\u5c06\u521a\u521a\u590d\u5236\u7684\u5185\u5bb9\u7c98\u8d34\u5230key\u4e2d\uff0c\uff08Title\u4efb\u610f\uff09\uff1b</p> <p>\u6267\u884c<code>ssh -T</code><code>git@github.com</code>\uff0c\u8f93\u5165<code>yes</code>\uff0c\u663e\u793a\u5982\u4e0b\u6210\u529f\uff1b</p> <pre><code>Hi ...! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre>"},{"location":"config/#wsl","title":"WSL","text":"<pre><code># \u8fc1\u79fb\nwsl --export Ubuntu D:\\Ubuntu\\Ubuntu.tar\nwsl --import Ubuntu C:\\Ubuntu\\ C:\\Ubuntu\\Ubuntu.tar --version 2\n</code></pre>"},{"location":"config/#docker","title":"Docker","text":"<pre><code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\nsudo usermod -aG docker ${USER}  # \u5c06\u5f53\u524d\u7528\u6237\u52a0\u5165Docker\u7528\u6237\u7ec4\nsudo service docker start    # \u542f\u52a8docker\u670d\u52a1\n</code></pre>"},{"location":"config/#nginx","title":"Nginx","text":"<pre><code>$ sudo apt install nginx -y\n# \u542f\u52a8\n$ sudo systemctl start nginx\n$ sudo systemclt enable nginx\n$ sudo systemctl status nginx\n# \u5f00\u653e\u7aef\u53e3\n$ sudo ufw enable # \u6253\u5f00\u9632\u706b\u5899\n$ sudo ufw allow 80/tcp\n$ sudo ufw allow 443/tcp\n$ sudo ufw status\n</code></pre>"},{"location":"config/#matlab","title":"MATLAB","text":"<ul> <li>\u9ed8\u8ba4\u521d\u59cb\u5de5\u4f5c\u8def\u5f84</li> </ul> <pre><code>% ...\\MATLAB\\toolbox\\local\\matlabrc.m\ncd(\"D:\\Syncdisk\");\n</code></pre>"},{"location":"maths/","title":"Maths","text":""},{"location":"maths/#_1","title":"\u548c\u5dee\u5316\u79ef\u4e0e\u79ef\u5316\u548c\u5dee","text":"\\[ \\begin{aligned} \\sin\\alpha+\\sin\\beta &amp;= 2\\sin\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha+\\cos\\beta &amp;= 2\\cos\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}\\\\ \\sin\\alpha-\\sin\\beta &amp;= 2\\cos\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\cos\\alpha-\\cos\\beta &amp;= -2\\sin\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}\\\\ \\end{aligned} \\] \\[ \\begin{aligned} \\sin\\alpha\\cos\\beta &amp;= \\frac{1}{2}[\\sin(\\alpha+\\beta)+\\sin(\\alpha-\\beta)]\\\\ \\cos\\alpha\\cos\\beta &amp;= \\frac{1}{2}[\\cos(\\alpha+\\beta)+\\cos(\\alpha-\\beta)]\\\\ \\cos\\alpha\\sin\\beta &amp;= \\frac{1}{2}[\\sin(\\alpha+\\beta)-\\sin(\\alpha-\\beta)]\\\\ \\sin\\alpha\\sin\\beta &amp;= -\\frac{1}{2}[\\cos(\\alpha+\\beta)-\\cos(\\alpha-\\beta)]\\\\ \\end{aligned} \\]"},{"location":"maths/#_2","title":"\u79ef\u5206","text":"\\[ \\lim_{n\\to\\infty}\\sum_{k=1}^n{\\dfrac{1}{n+k}} = \\lim_{n\\to\\infty}\\sum_{k=1}^n{\\dfrac{1}{1+\\frac{k}{n}}}=\\int_0^1{\\dfrac{1}{1+x}}dx=\\ln2. \\]"},{"location":"maths/#_3","title":"\u5e38\u5fae\u5206\u65b9\u7a0b","text":"<ul> <li>\\(\\dfrac{dy}{dx}=f(x)g(y)\\)</li> </ul> \\[ \\int{\\dfrac{dy}{g(y)}=\\int{f(x)dx}+C} \\] <ul> <li>\\(\\dfrac{dy}{dx}=f(x,y)\\)</li> </ul> \\[ \\begin{aligned} &amp;\\text{let}\\ y = ux\\\\ f(x,y) &amp;= f(x,ux)=\\varphi(u)\\\\ \\varphi(u) &amp;= u+x\\dfrac{du}{dx}\\\\ \\int \\dfrac{du}{\\varphi(u)-u}&amp;=\\int \\dfrac{dx}{x} + C=\\ln|x| + C\\\\ \\Phi(u)&amp;=\\Phi(\\dfrac{y}{x}) = \\ln|x| + C\\\\ \\end{aligned} \\] <ul> <li>\\(y'+p(x)y=q(x)\\)</li> </ul> \\[ y = \\dfrac{\\displaystyle\\int e^{\\int p(x)dx} q(x)dx+C}{e^{\\int p(x)dx}} \\] <ul> <li>\\(y'+p(x)y=q(x)y^n\\)</li> </ul> \\[ \\begin{aligned} &amp;y'y^{-n}+p(x)y^{1-n} = q(x)\\\\ \\text{let}\\ &amp;z = y^{1-n},\\dfrac{dz}{dx}=(1-n)\\dfrac{dy}{dx}y^{-n}\\\\ &amp;\\dfrac{1}{1-n}\\dfrac{dz}{dx}+p(x)z=q(x) \\end{aligned} \\]"},{"location":"maths/#extended-euclidean-algorithm","title":"Extended Euclidean Algorithm","text":"\\(q\\) \\(a\\) \\(b\\) \\(s_0\\) \\(s_1\\) \\(t_0\\) \\(t_1\\) \\(-\\) \\(25\\) \\(21\\) \\(1\\) \\(0\\) \\(0\\) \\(1\\) \\(1\\) \\(21\\) \\(4\\) \\(0\\) \\(1\\) \\(1\\) \\(-1\\) \\(5\\) \\(4\\) \\(1\\) \\(1\\) \\(-5\\) \\(-1\\) \\(6\\) \\(4\\) \\(1\\) \\(0\\) \\(-5\\) \\(21\\) \\(6\\) \\(-25\\) \\[ (-5) * 25 + 6 * 21 = 1 \\]"},{"location":"maths/#_4","title":"\u6e10\u8fdb\u65e0\u504f\u4f30\u8ba1","text":"<p>\u8bbe\\(X_1, X_2, \\cdots, X_n\\)\u662f\u6765\u81ea\u603b\u4f53\\(X\\)\u7684\u6837\u672c\uff0c\u4e14\\(E(X) = \\mu\\)\u5df2\u77e5\uff0c\\(D(X)=\\sigma^2\\)\u672a\u77e5\uff0c\u5219\\(\\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\mu)^2\\)\u662f\\(\\sigma^2\\)\u7684\u65e0\u504f\u4f30\u8ba1\u3002</p> <p>\\(\\forall i=1,2,,\\cdots,n\\)\uff0c\u6709\\(E[(X_i-\\mu)^2]=\\sigma^2\\)\uff0c\u5219 $$ E\\left(\\dfrac{1}{n}\\sum_{i=1}^n(X_i-\\mu)^2\\right) = \\dfrac{1}{n}E\\left(\\sum_{i=1}^n(X_i-\\mu)^2\\right)=\\dfrac{1}{n}n\\sigma^2 $$</p> <p>\u8bbe\\(X_1, X_2, \\cdots, X_n\\)\u662f\u6765\u81ea\u603b\u4f53\\(X\\)\u7684\u6837\u672c\uff0c\\(E(X) = \\mu\\)\u672a\u77e5\uff0c\\(D(X)=\\sigma^2\\)\u672a\u77e5\uff0c\u5219\\(\\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\overline{X})^2\\)\u4e0d\u662f\\(\\sigma^2\\)\u7684\u65e0\u504f\u4f30\u8ba1\u3002</p> \\[ \\begin{aligned} \\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\overline{X})^2 &amp;= \\dfrac{1}{n}\\sum_{i=1}^n\\left((X_i-\\mu) + (\\mu - \\overline{X})\\right)^2\\\\ &amp;= \\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\mu)^2 + 2(\\overline{X}-\\mu)(\\mu-\\overline{X}) + (\\mu-\\overline{X})^2\\\\ &amp;= \\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\mu)^2 -(\\mu-\\overline{X})^2\\\\ &amp;\\leq \\sigma^2 \\end{aligned} \\] <p>\u5f53\\(\\overline{X}\\not=\\mu\\)\u65f6\uff0c\\(\\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\overline{X})^2\\)\u4f1a\u9020\u6210\u5bf9\u65b9\u5dee\u7684\u4f4e\u4f30\uff0c\u56e0\u6b64\u9700\u8981\u7f29\u5c0f\u5206\u6bcd\u3002</p> <p>\u5df2\u77e5</p> \\[ \\begin{aligned} E(\\overline{X}) &amp;= E(\\dfrac{1}{n}\\sum_{i=1}^nX_i) = \\dfrac{1}{n}\\sum_{i=1}^nE(X_i) = \\dfrac{1}{n}n\\mu = \\mu\\\\ D(\\overline{X}) &amp;= D(\\dfrac{1}{n}\\sum_{i=1}^nX_i) = \\dfrac{1}{n^2}D(\\sum_{i=1}^nX_i) = \\dfrac{1}{n^2}n\\sigma^2 = \\dfrac{1}{n}\\sigma^2\\\\ E(\\overline{X}^2) &amp;= E(\\overline{X})^2 + D(\\overline{X}) = \\mu^2 + \\dfrac{1}{n}\\sigma^2\\\\ \\end{aligned} \\] <p>\u4e8e\u662f\u6709</p> \\[ \\begin{aligned} E\\left(\\sum_{i=1}^n(X_i-\\overline{X})^2\\right)  &amp;= E(\\sum_{i=1}^nX_i^2-n\\overline{X}^2)\\\\ &amp;= \\sum_{i=1}^nE(X_i^2) - nE(\\overline{X}^2)\\\\ &amp;= n(\\mu^2 + \\sigma^2) - n(\\mu^2 + \\dfrac{\\sigma^2}{n})\\\\ &amp;= (n - 1)\\sigma^2\\\\ \\end{aligned} \\] <p>\u6700\u7ec8\u5f97\u5230\\(\\dfrac{1}{n-1}\\displaystyle\\sum_{i=1}^n(X_i-\\overline{X})^2\\)\u662f\\(\\sigma^2\\)\u7684\u65e0\u504f\u4f30\u8ba1\u3002</p> <p>\u7531\u4e8e\\(\\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\overline{X})^2=\\dfrac{n}{n-1}\\sigma^2\\)\uff0c\u4e14\\(\\displaystyle\\lim_{n\\to\\infty}\\dfrac{n-1}{n}\\sigma^2=\\sigma^2\\)\uff0c\u5219\u79f0\\(\\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n(X_i-\\overline{X})^2\\)\u4e3a\\(\\sigma^2\\)\u7684\u6e10\u8fdb\u65e0\u504f\u4f30\u8ba1\u3002</p>"},{"location":"satellite/","title":"\u536b\u661f\u901a\u4fe1","text":""},{"location":"satellite/#_2","title":"\u822a\u5929\u5668\u8fd0\u884c\u8f68\u9053","text":"<ol> <li>\u4f4e\u5730\uff08\u7403\uff09\u8f68\u9053\u8fd1\u5730\uff08\u7403\uff09\u8f68\u9053\uff08LEO\uff1aLow Earth Orbit\uff09</li> <li>\u8f68\u9053\u9ad8\u5ea6\uff1a\u7ea6400-2000\u516c\u91cc\uff1b</li> <li> <p>\u5e94\u7528\uff1a\u7edd\u5927\u591a\u6570\u5bf9\u5730\u89c2\u6d4b\u536b\u661f\u3001\u6d4b\u5730\u536b\u661f\u3001\u7a7a\u95f4\u7ad9\u4ee5\u53ca\u4e00\u4e9b\u65b0\u7684\u901a\u4fe1\u536b\u661f\u7cfb\u7edf\u3002</p> </li> <li> <p>\u4e2d\u5730\u7403\u8f68\u9053\uff08MEO\uff1aMiddle Earth Orbit\uff09</p> </li> <li>\u8f68\u9053\u9ad8\u5ea6\uff1a2000-36000\u516c\u91cc\u4e4b\u95f4\uff1b</li> <li> <p>\u5e94\u7528\uff1aGPS\u3001GLONASS\u7b49\u5bfc\u822a\u536b\u661f\u7cfb\u7edf\u3002</p> </li> <li> <p>\u5730\u7403\u540c\u6b65\u8f6c\u79fb\u8f68\u9053\uff08GTO\uff1aGeostationary Transfer Orbit\uff09\uff08\u692d\u5706\u8f68\u9053\uff09</p> </li> <li>\u7279\u70b9\uff1a\u8fd1\u5730\u70b9\u57281000\u516c\u91cc\u4ee5\u4e0b\u3001\u8fdc\u5730\u70b9\u4e3a\u5730\u7403\u540c\u6b65\u8f68\u9053\u9ad8\u5ea6\uff08\u7ea636000\u516c\u91cc\uff09\uff1b</li> <li> <p>\u5e94\u7528\uff1a\u4e3a\u970d\u66fc\u8f6c\u79fb\u8f68\u9053\u7684\u8fd0\u7528\u4e4b\u4e00\uff0c\u7ecf\u52a0\u901f\u540e\u53ef\u8fbe\u5730\u7403\u9759\u6b62\u8f68\u9053\uff08GEO\uff09\u3002\u5e38\u4ee5\u5730\u7403\u540c\u6b65\u8f6c\u79fb\u8f68\u9053\u916c\u8f7d\u80fd\u529b\u4f5c\u4e3a\u706b\u7bad\u6027\u80fd\u6307\u6807\u3002</p> </li> <li> <p>\u5730\u7403\u540c\u6b65\u8f68\u9053\uff08GEO\uff1aGeostationary Orbit\uff09</p> </li> <li>\u8f68\u9053\u9ad8\u5ea6\uff1a\u7ea636000 km\uff1b</li> <li>\u7279\u70b9\uff1a\u536b\u661f\u8fd0\u884c\u65b9\u5411\u4e0e\u5730\u7403\u81ea\u8f6c\u65b9\u5411\u76f8\u540c\u3001\u8fd0\u884c\u8f68\u9053\u4e3a\u4f4d\u4e8e\u5730\u7403\u8d64\u9053\u5e73\u9762\u4e0a\u5706\u5f62\u8f68\u9053\u3001\u8fd0\u884c\u5468\u671f\u4e0e\u5730\u7403\u81ea\u8f6c\u4e00\u5468\u7684\u65f6\u95f4\u76f8\u7b49\uff0823\u65f656\u52064\u79d2\uff09\uff0c\u536b\u661f\u5728\u8f68\u9053\u4e0a\u7684\u7ed5\u884c\u901f\u5ea6\u7ea6\u4e3a3.1\u516c\u91cc\u79d2\u3002</li> <li>\u5e94\u7528\uff1a\u5e03\u8bbe3\u9897\u901a\u8baf\u536b\u661f\u5373\u53ef\u5b9e\u73b0\u9664\u4e24\u6781\u5916\u7684\u5168\u7403\u901a\u8baf\u3002</li> </ol> <p>\u5730\u7403\u540c\u6b65\u8f68\u9053\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li> <p>\u5730\u7403\u9759\u6b62\u8f68\u9053\uff08GEO\uff1aGeostationary Orbit\uff09\uff08\u6b63\u5706\u8f68\u9053\uff09</p> <ul> <li>\u7279\u70b9\uff1a\u8f68\u9053\u9762\u7684\u503e\u89d2\u4e3a\u96f6\u5ea6\uff0c\u536b\u661f\u5728\u5730\u7403\u8d64\u9053\u4e0a\u7a7a\u8fd0\u884c\uff0c\u4ece\u5730\u7403\u4e0a\u4ef0\u671b\u536b\u661f\u4eff\u4f5b\u60ac\u6302\u5728\u592a\u7a7a\u9759\u6b62\u4e0d\u52a8\u3002</li> </ul> </li> <li> <p>\u503e\u659c\u5730\u7403\u540c\u6b65\u8f68\u9053\uff08IGSO\uff1aInclined Geosynchronous Orbit\uff09</p> <ul> <li>\u7279\u70b9\uff1a\u503e\u89d2\u4e0d\u4e3a0\u7684\u5730\u7403\u540c\u6b65\u8f68\u9053\uff0c\u661f\u4e0b\u70b9\u8f68\u8ff9\u662f\u4e00\u4e2a\u8de8\u5357\u5317\u534a\u7403\u7684\u201c8\u201d\u5b57\u3002</li> </ul> </li> <li> <p>\u6781\u5730\u8f68\u9053\u540c\u6b65\u8f68\u9053\uff0c\u53c8\u53eb\u592a\u9633\u540c\u6b65\u8f68\u9053\uff08SSO\uff1aSun-synchronous Orbit\uff09</p> <ul> <li>\u7279\u70b9\uff1a\u536b\u661f\u7684\u8f68\u9053\u5e73\u9762\u548c\u592a\u9633\u59cb\u7ec8\u4fdd\u6301\u76f8\u5bf9\u56fa\u5b9a\u7684\u53d6\u5411\uff0c\u8f68\u9053\u503e\u89d2\u63a5\u8fd190\u5ea6\u3002\u9002\u7528\u4e8e\u5168\u7403\u8303\u56f4\u5185\u8fdb\u884c\u89c2\u6d4b\u548c\u5e94\u7528\u7684\u6c14\u8c61\u536b\u661f\u3001\u5bfc\u822a\u536b\u661f\u3001\u5730\u7403\u8d44\u6e90\u536b\u661f\u7b49\u3002</li> <li>\u5e94\u7528\uff1a\u503e\u659c\u8f68\u9053\u548c\u6781\u5730\u8f68\u9053\u540c\u6b65\u536b\u661f\u4ece\u5730\u7403\u4e0a\u770b\u662f\u79fb\u52a8\u7684\uff0c\u4f46\u6bcf\u5929\u53ef\u4ee5\u7ecf\u8fc7\u7279\u5b9a\u7684\u5730\u533a\uff0c\u7528\u4e8e\u79d1\u7814\u3001\u6c14\u8c61\u6216\u519b\u4e8b\u60c5\u62a5\u7684\u641c\u96c6\uff0c\u4ee5\u53ca\u4e24\u6781\u5730\u533a\u548c\u9ad8\u7eac\u5ea6\u5730\u533a\u7684\u901a\u4fe1\u3002</li> </ul> </li> </ul>"},{"location":"zynq/","title":"ZYNQ","text":"<pre><code>Project family: Zynq-7000\nProject part: xc7z020clg400-2\n</code></pre>"},{"location":"zynq/#block-design","title":"Block Design","text":""},{"location":"zynq/#zynq-block-design","title":"ZYNQ Block Design","text":"<p>ZYNQ\u786c\u6838\u67b6\u6784\u56fe\uff0c\u7eff\u8272\u90e8\u5206\u662f\u53ef\u914d\u7f6e\u6a21\u5757\u3002</p>"},{"location":"zynq/#ps-pl-configuration","title":"PS-PL Configuration","text":"<p>PS\u4e0ePL\u4e4b\u95f4\u63a5\u53e3\u7684\u914d\u7f6e\u4e3b\u8981\u805a\u7126\u4e8eAXI\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u80fd\u591f\u6269\u5c55PL\u7aef\u7684AXI\u63a5\u53e3\u5916\u8bbe\u3002\u56e0\u6b64\uff0c\u5f53PL\u9700\u8981\u4e0ePS\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\u65f6\uff0c\u5fc5\u987b\u9075\u5faaAXI\u603b\u7ebf\u534f\u8bae\u3002Xilinx\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684AXI\u63a5\u53e3IP\u6838\u3002</p>"},{"location":"zynq/#peripheral-io-pins","title":"Peripheral I/O Pins","text":"<p>\u56fe\u5f62\u5316\u914d\u7f6e\u754c\u9762\uff08ZYNQ\u7684PS\u7aef\u5916\u8bbe\u662f\u590d\u7528\u7684\uff0c\u76f8\u540c\u7684\u5f15\u811a\u6807\u53f7\u53ef\u4ee5\u914d\u7f6e\u6210\u4e0d\u4e00\u6837\u7684\u529f\u80fd\uff0c\u4f46\u53ea\u80fd\u540c\u65f6\u914d\u5236\u6210\u4e00\u79cd\u5916\u8bbe\uff09</p> <ul> <li>PS\u7aef\u5206\u4e3a\u4e24\u4e2a<code>Bank</code>\uff0c\u5206\u522b\u4e3a\u539f\u7406\u56fe\u4e2d\u7684<code>Bank500,501</code>\uff0c\u5206\u522b\u914d\u7f6e\u4e3a<code>LVCMOS3.3V</code>\u548c<code>LVCMOS1.8V</code>\uff1b</li> <li>\u6839\u636e\u539f\u7406\u56fe\uff0c\u4e32\u53e3\u8fde\u63a5\u5728PS\u7684<code>MIO48,49</code>\u4e0a\uff0c\u56e0\u6b64\u5728\u9009\u9879\u4e2d\u4f7f\u80fdUART1(MIO48 MIO49)\uff1b</li> <li><code>Quad SPI Flash, QSPI</code>\uff1a\u4f5c\u4e3aZYNQ\u7684\u542f\u52a8\u5b58\u50a8\u8bbe\u5907\uff0cZYNQ\u901a\u8fc7\u8bfb\u53d6QSPI\u4e2d\u5b58\u50a8\u7684\u542f\u52a8\u6587\u4ef6\u52a0\u8f7dARM\u548cFPGA\uff0c\u9009\u62e9<code>Single SS 4bit IO</code></li> <li><code>Ethernet</code>\uff1a\u4ee5\u592a\u7f51\u63a5\u53e3\uff0c\u6839\u636e\u539f\u7406\u56fe\uff0c\u914d\u7f6e<code>MDIO</code>\u4e3a<code>MIO52,53</code></li> </ul> <p>\uff08\u540c\u7406\uff0c\u53ef\u6839\u636e\u539f\u7406\u56fe\u7b2c4\u9875\u914d\u7f6e\uff09</p> <p>[Run Block Automation]\u540e\u5c06<code>M_AXI_GP0_ACLK</code>\u4e0e<code>FCLK_CLK0</code>\u76f8\u8fde\u3002</p>"},{"location":"zynq/#gpio","title":"GPIO","text":"<p>Xilinx ZYNQ\u63d0\u4f9b\u4e86MIO\u3001EMIO\u3001AXI_GPIO\u4e09\u79cd\u7c7b\u578b\u7684GPIO\u63a5\u53e3\u3002</p> <ul> <li>MIO\u662f\u5c5e\u4e8ePS\u7aef\u7684\u56fa\u5b9aIO\u53e3\uff0c\u4f7f\u7528\u65f6\u4e0d\u9700\u8981\u6d88\u8017PL\u7aef\u7684\u8d44\u6e90\uff1b</li> <li>EMIO\u662f\u901a\u8fc7PL\u8fdb\u884c\u6269\u5c55\u7684IO\u53e3\uff0c\u4f7f\u7528\u65f6\u9700\u8981\u5206\u914dPL\u7aef\u7684\u5f15\u811a\uff0c\u6d88\u8017PL\u7aef\u8d44\u6e90\uff1b</li> <li>AXI_GPIO\u662fXilinx\u5c01\u88c5\u597d\u7684IP\u6838\uff0c\u662fPS\u7aef\u901a\u8fc7AXI GP\u603b\u7ebf\u63a7\u5236PL\u7aef\u7684IO\u53e3\u6280\u672f\uff0c\u4f7f\u7528\u65f6\u9700\u8981\u6d88\u8017PL\u7aef\u8d44\u6e90\u3002</li> </ul>"},{"location":"zynq/#mio","title":"MIO","text":"<p>ZYNQ7000\u7cfb\u5217\u82af\u7247\u670954\u4e2aMIO\uff0c\u5b83\u4eec\u5206\u914d\u5728 GPIO \u7684 Bank0 \u548cBank1\uff0c\u96b6\u5c5e\u4e8ePS\u90e8\u5206\uff0c\u8fd9\u4e9b IO \u4e0e PS \u76f4\u63a5\u76f8\u8fde\u4f7f\u7528\u65f6\u4e0d\u9700\u8981\u6dfb\u52a0\u5f15\u811a\u7ea6\u675f\uff0c\u5bf9PL\u90e8\u5206\u4e0d\u53ef\u89c1\u3002\u6240\u4ee5\u5bf9 MIO \u7684\u64cd\u4f5c\u53ef\u4ee5\u770b\u4f5c\u662f\u7eaf PS \u7684\u64cd\u4f5c\u3002\u7528SDK\u8f6f\u4ef6\u64cd\u4f5c\u5e95\u5c42\u90fd\u662f\u5bf9\u4e8e\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u7684\u64cd\u4f5c\u3002</p> <p>MIO\u6216EMIO\u4f7f\u7528\u65f6\u9700\u8981\u8c03\u7528API\u51fd\u6570\uff1a</p> <ol> <li>\u6839\u636e\u8bbe\u5907ID\u8fd4\u56de\u7ed3\u6784\u4f53XGpioPs_Config\u7684\u914d\u7f6e</li> </ol> <pre><code>XGpioPs_Config *XGpioPs_LookupConfig(u16 DeviceId);\n</code></pre> <ol> <li>\u521d\u59cb\u5316GPIO\uff0c\u4e3b\u8981\u5b8c\u6210\u5bf9XGpioPs\u7ed3\u6784\u4f53\u7684\u914d\u7f6e</li> </ol> <pre><code>s32 XGpioPs_CfgInitialize(XGpioPs *InstancePtr, XGpioPs_Config *ConfigPtr, u32 EffectiveAddr);\n</code></pre> <ol> <li>\u4e3a\u6307\u5b9a\u7684\u5f15\u811a\u914d\u7f6e\u8f93\u5165\u8f93\u51fa\u65b9\u5411\uff08\u5bf9\u65b9\u5411\u5bc4\u5b58\u5668<code>DirModeReg</code>\u4f7f\u80fd\uff09\u3002<code>0</code>\u8f93\u5165\uff0c<code>1</code>\u8f93\u51fa</li> </ol> <pre><code>void XGpioPs_SetDirectionPin(XGpioPs *InstancePtr, u32 Pin, u32 Direction);\n</code></pre> <ol> <li>\u8bbe\u7f6e\u6307\u5b9a\u5f15\u811a\u8f93\u51fa\u4f7f\u80fd\uff08\u5bf9<code>OpEnableReg</code>\u5bc4\u5b58\u5668\u914d\u7f6e\uff09\u3002OpEnableReg\u4e0eDirModeReg\u5c5e\u4e8e\u903b\u8f91\u4e0e\u7684\u5173\u7cfb\uff0c\u53ea\u6709\u4e24\u4e2a\u90fd\u914d\u7f6e\u6210\u529f\u624d\u80fd\u5b9e\u73b0MIO\u7684\u8f93\u5165\u6216\u8005\u8f93\u51fa\u7684\u914d\u7f6e\u3002</li> </ol> <pre><code>void XGpioPs_SetOutputEnablePin(XGpioPs *InstancePtr, u32 Pin, u32 OpEnable);\n</code></pre> <ol> <li>\u4ece\u6307\u5b9a\u5f15\u811a\u8bfb\u51fa\u6570\u636e\u3002\u8fd4\u56de\u503c\u662f\u4eceDATA_RO\u5bc4\u5b58\u5668\u5185\u53d6\u51fa\u8bfb\u5230\u7684\u6570\u636e</li> </ol> <pre><code>u32 XGpioPs_ReadPin(XGpioPs *InstancePtr, u32 Pin);\n</code></pre> <ol> <li>\u5bf9\u6307\u5b9a\u5f15\u811a\u5199\u5165\u6570\u636e\u3002\u5bf9DATA\u5bc4\u5b58\u5668\u3001DATA_MSW\u5bc4\u5b58\u5668\u3001DATA_LSW\u5bc4\u5b58\u5668\u8fdb\u884c\u914d\u7f6e\uff0c\u5171\u540c\u5b8c\u6210\u8f93\u51fa\u6570\u636e\u7684\u5199\u5165\u3002</li> </ol> <pre><code>void XGpioPs_WritePin(XGpioPs *InstancePtr, u32 Pin, u32 Data);\n</code></pre> <p>\u4f8b\u5982\uff0c\u5229\u7528MIO\u4f7fPS\u7aefLED\u706f\u95ea\u70c1\uff1a</p> <pre><code>#include \"xparameters.h\"  // \u5b8f\u5b9a\u4e49\u67e5\u627e\n#include &lt;stdio.h&gt;\n#include \"platform.h\"\n#include \"xil_printf.h\"\n#include \"xgpiops.h\"\n#include \"sleep.h\"\n\n#define GPIO_DEVICE_ID      XPAR_XGPIOPS_0_DEVICE_ID  // \"xparameters.h\"\nXGpioPs Gpio;\n\nint main() {\n    init_platform();\n\n    int Status;\n    XGpioPs_Config *ConfigPtr;\n\n    // \u521d\u59cb\u5316 GPIO\n    ConfigPtr = XGpioPs_LookupConfig(GPIO_DEVICE_ID);  // (1) \u914d\u7f6e\n    Status = XGpioPs_CfgInitialize(&amp;Gpio, ConfigPtr, ConfigPtr-&gt;BaseAddr);  // (2)\n    if (Status != XST_SUCCESS) {\n        return XST_FAILURE;\n    }\n    // \u8bbe\u7f6e\u65b9\u5411\u4e3a\u8f93\u51fa\u65b9\u5411\uff0c\u5e76\u4f7f\u80fd\u8f93\u51fa\n    XGpioPs_SetDirectionPin(&amp;Gpio, 0, 1);     // (3) \u8bbe\u7f6eIO\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u5411\n    XGpioPs_SetOutputEnablePin(&amp;Gpio, 0, 1);  // (4) \u4f7f\u80fd\u5bf9\u5e94\u7684IO\n    XGpioPs_SetDirectionPin(&amp;Gpio, 13, 1);\n    XGpioPs_SetOutputEnablePin(&amp;Gpio, 13, 1);\n    while(1){\n        // 0 \u2192 1 \u2192 0 \u2192 ...\n        XGpioPs_WritePin(&amp;Gpio, 0, 0x0);      // (5) \u5bf9IO\u8bfb\u5199\u64cd\u4f5c\n        XGpioPs_WritePin(&amp;Gpio, 13, 0x0);\n        sleep(1);\n        XGpioPs_WritePin(&amp;Gpio, 0, 0x1);\n        XGpioPs_WritePin(&amp;Gpio, 13, 0x1);\n        sleep(1);\n    }\n    cleanup_platform();\n    return 0;\n}\n</code></pre> <pre><code>// \u8bbe\u7f6e\u6309\u952e\u4e3a\u8f93\u5165\u65b9\u5411\u3001\u4e0a\u5347\u6cbf\u89e6\u53d1\u5e76\u4f7f\u80fd\nXGpioPs_SetDirectionPin(&amp;GPIO_PTR, PS_KEY_MIO, GPIO_INPUT);\nXGpioPs_SetIntrTypePin(&amp;GPIO_PTR, PS_KEY_MIO, XGPIOPS_IRQ_TYPE_EDGE_RISING);\nXGpioPs_IntrEnablePin(&amp;GPIO_PTR, PS_KEY_MIO);\n</code></pre>"},{"location":"zynq/#emio","title":"EMIO","text":"<p>[Customize Block]\u2192[MIO Configuation]\u9009\u62e9EMIO</p> <p>\u6269\u5c55MIO\uff0c\u4f9d\u7136\u5c5e\u4e8eZYNQ\u7684PS\u90e8\u5206\uff0c\u53ea\u662f\u8fde\u63a5\u5230\u4e86PL\u4e0a\uff0c\u518d\u4ecePL\u7684\u5f15\u811a\u8fde\u5230\u82af\u7247\u5916\u9762\u5b9e\u73b0\u6570\u636e\u8f93\u5165\u8f93\u51fa\u3002 PS\u64cd\u4f5cMIO\u548cEMIO\u7684\u65b9\u6cd5\u7c7b\u4f3c\u3002</p> <p>MIO\u5206\u5e03\u5728BANK0\uff0cBANK1\uff0c\u800cEMIO\u5219\u5206\u5e03\u5728BANK2\u3001BANK3\uff0c\u53c2\u8003[Figure 14\u20101: GPIO Block Diagram]</p> <ol> <li> <p>MIO\u5728ZYNQ\u4e0a\u7684\u7ba1\u811a\u662f\u56fa\u5b9a\u7684\uff0c\u800cEMIO\u662f\u901a\u8fc7PL\u90e8\u5206\u6269\u5c55\u7684\uff0c\u6240\u4ee5\u4f7f\u7528EMIO\u65f6\u5019\u9700\u8981\u5728\u7ea6\u675f\u6587\u4ef6\u4e2d\u5206\u914d\u7ba1\u811a\uff0c\u5e76\u4e14\u8bbe\u8ba1EMIO\u7684\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u751f\u6210PL\u90e8\u5206\u7684bit\u6587\u4ef6\u70e7\u5199\u5230FPGA\u4e2d\uff1b</p> </li> <li> <p>MIO\u5171\u536054bit\uff0c\u5360\u7528IO\u53f7\u4e3a0-53\uff0c\u914d\u7f6e\u65b9\u6cd5\u89c1Block Design/Peripheral I/O Pins\u90e8\u5206\uff1bEMIO\u536064bit\uff0c\u5360\u7528IO\u53f7\u4e3a54-117\uff1b</p> </li> <li> <p>MIO\u548cEMIO\u90fd\u662f\u76f4\u63a5\u6302\u5728PS\u4e0a\u7684GPIO\uff0c\u7531PS\u64cd\u4f5c\u3002\u8c03\u7528\u5934\u6587\u4ef6<code>xgpiops.h</code>\u5373\u53ef\uff1bAXI_GPIO\u662f\u901a\u8fc7AXI\u603b\u7ebf\u6302\u5728PS\u4e0a\u7684GPIO\u4e0a\uff0c\u4f7f\u7528AXI_GPIO\u65f6\uff0c\u9700\u8981\u8c03\u7528\u5934\u6587\u4ef6<code>xgpio.h</code>\uff1b</p> </li> </ol>"},{"location":"zynq/#axi-gpio","title":"AXI GPIO","text":"<p>AXIGPIO\u7531FPGA\u7684PL\u903b\u8f91\u6838\u529f\u80fd\u5b9e\u73b0\uff0c\u76f8\u5f53\u4e8eGPIO\u7684IP\u6838\uff0c\u901a\u8fc7AXI\u603b\u7ebf\u6302\u5728PS\u4e0a\u7684GPIO\u4e0a\uff0c\u8017\u8d39PL\u7aef\u7684\u903b\u8f91\u8d44\u6e90\u3002</p>"},{"location":"zynq/#ip-catalog","title":"IP Catalog","text":""},{"location":"zynq/#clock-wizard","title":"Clock Wizard","text":"<p>\u9501\u76f8\u73af(PLL)\uff0c\u7528\u4e8e\u4ea7\u751f\\(50Hz\\)\u7684\u5206\u9891\u6216\u500d\u9891\u3002</p> <ul> <li><code>locked</code>\u4fe1\u53f7\uff1a\u89c2\u5bdf\u8f93\u5165\u65f6\u949f\u662f\u5426\u9501\u5b9a\uff0c\u5982\u679c\u8f93\u5165\u65f6\u949f\u4fe1\u53f7\u9501\u5b9a\uff0c\u5c31\u4f1a\u8f93\u51fa\u4e00\u4e2alocked\u9ad8\u7535\u5e73\u4fe1\u53f7\u3002</li> </ul> <p><code>locked</code>\u4fe1\u53f7\u662f\u5728\u8f93\u5165\u4fe1\u53f7\u7a33\u5b9a\u4e4b\u540e\u518d\u8f93\u51fa\u4e00\u4e2a<code>locked</code>\u4fe1\u53f7\uff0c\u521a\u5f00\u59cblocked\u4fe1\u53f7\u662f\u4f4e\u7535\u5e73\uff0c\u7b49\u5230\u65f6\u949f\u4fe1\u53f7\u7a33\u5b9a\u4e4b\u540e\u4ed6\u5c31\u4f1a\u62c9\u9ad8\u3002</p>"},{"location":"zynq/#block-memory-generator","title":"Block Memory Generator","text":"<p>\u7528\u4e8e\u7f13\u5b58\u6570\u636e\u3002</p> <ul> <li> <p><code>Memory Type</code>\u5e38\u7528\u7684\u662f<code>Simple Dual Port RAM</code>\uff0c\u4e24\u4e2a\u7aef\u53e3\uff08\u8bfb\u5199+\u53ea\u8bfb\uff09\u8f93\u5165\u548c\u8f93\u51fa\u4fe1\u53f7\u72ec\u7acb\uff1b</p> </li> <li> <p><code>Primitives Output Register</code>\uff1a\uff08\u5728\u8f93\u51fa\u6570\u636e\u52a0\u4e0a\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u6709\u6548\u6539\u5584\u65f6\u5e8f\uff0c\u4f46\u8bfb\u51fa\u7684\u6570\u636e\u4f1a\u843d\u540e\u5730\u5740\u4e24\u4e2a\u5468\u671f\uff09\u591a\u6570\u60c5\u51b5\u4e0b\u4e0d\u4f7f\u80fd\u5b83\uff0c\u4fdd\u6301\u6570\u636e\u843d\u540e\u5730\u5740\u4e00\u4e2a\u5468\u671f\uff1b</p> </li> <li><code>Width</code>\u8868\u793a\u6570\u636e\u4f4d\u5bbd\uff0c<code>Depth</code>\u8868\u793a\u5b58\u50a8\u6570\u636e\u7684\u4e2a\u6570\uff1b</li> </ul>"},{"location":"zynq/#fifo-generator","title":"FIFO Generator","text":"<ul> <li> <p>FIFO\u662f\u4e3a\u4e86\u7f13\u5b58\u6570\u636e\uff0c\u56e0\u6b64\u4e24\u8fb9\u7684\u65f6\u949f\u901a\u5e38\u4e0d\u540c\uff0c\u6240\u4ee5\u9009\u62e9<code>Independent Clocks Block RAM</code>\uff1b</p> </li> <li> <p><code>FWFT</code>\u8bfb\u6a21\u5f0f\uff1a<code>rd_en</code>\u4fe1\u53f7\u6709\u6548\u65f6\uff0c\u6709\u6548\u6570\u636e<code>D0</code>\u5df2\u7ecf\u5728\u6570\u636e\u7ebf\u4e0a\u51c6\u5907\u597d\u6709\u6548\u4e86\uff0c\u4e0d\u4f1a\u518d\u5ef6\u540e\u4e00\u4e2a\u5468\u671f\uff08\u4e0e<code>Standard FIFO</code>\u7684\u533a\u522b\uff09</p> </li> </ul>"},{"location":"zynq/#ilaintegrated-logic-analyzer","title":"ILA(Integrated Logic Analyzer)","text":"<p>\u5e38\u7528\u7684\u5728\u7ebf\u8c03\u8bd5\u65b9\u6cd5\uff1a</p> <ul> <li>ILA IP Catalog</li> <li>VIO IP Catalog</li> <li><code>(* MARK_DEBUG=\"true\" *)</code>\uff0c[SYNTHESIS]\u7efc\u5408\u540e\u6253\u5f00[Open Synthesized Design]\uff0c\u53f3\u4e0a\u89d2\u9009\u62e9[Debug]\u6a21\u5f0f\uff0c\u88ab\u6807\u8bb0\u7684\u4fe1\u53f7\u4f1a\u6709\ud83d\udd77\ufe0f\u6807\u8bc6\u3002</li> </ul> <p>General Options</p> <ul> <li><code>Native</code>\uff1a\u5e38\u89c4\u666e\u901a\u63a5\u53e3\u6a21\u5f0f</li> <li><code>AXI</code>\uff1aAXI \u63a5\u53e3\u6a21\u5f0f\uff0c\u7528\u4e8e\u8c03\u8bd5 AXI \u63a5\u53e3\u4fe1\u53f7</li> <li><code>Number of Probes</code>\uff1a\u63a2\u9488\u6570\u91cf</li> <li><code>Sample Data Depth</code>\uff1a\u91c7\u6837\u6570\u636e\u6df1\u5ea6\uff0c\u6570\u503c\u8d8a\u5927\uff0c\u91c7\u6837\u7684\u6570\u636e\u8d8a\u591a\uff0c\u770b\u5230\u7684\u6ce2\u5f62\u6570\u636e\u8d8a\u591a\uff08\u6700\u7ec8\u5360\u7528\u7684\u8d44\u6e90\u8d8a\u591a\uff09</li> </ul> <p>Probe_Ports</p> <ul> <li><code>Probe Width</code>\uff1a\u6839\u636e\u4ee3\u7801\u4e2d\u7684\u5b9a\u4e49\u8bbe\u7f6e\u4f4d\u5bbd</li> <li><code>Probe Trigger or Data</code>\uff1a\u8bbe\u7f6e\u4e3a<code>DATA AND TRIGGER</code></li> </ul> <p>\u4f8b\u5982\uff1a</p> <pre><code>ila your_instance_name (\n    .clk(clk), // input wire clk\n\n    .probe0(probe0), // input wire [31:0]  probe0  \n    .probe1(probe1) // input wire [3:0]  probe1\n);\n</code></pre>"},{"location":"zynq/#_1","title":"\u8c03\u8bd5\u754c\u9762","text":"<p>bit\u6587\u4ef6\u70e7\u5199\u540e\uff0c\u4f1a\u8fdb\u5165\u4e0b\u56fe\u6240\u793a\u7684ILA\u8c03\u8bd5\u754c\u9762</p> <p></p> <p>Waveform\u7a97\u53e3</p> <p>\u901a\u8fc7[+/-]\u9009\u62e9\u9700\u8981\u89c2\u5bdf\u7684\u6ce2\u5f62\uff08\u6ce2\u5f62\u80fd\u5426\u663e\u793a\u4e0eProbe_Ports\u7684<code>Probe Trigger or Data</code>\u53c2\u6570\u8bbe\u7f6e\u6709\u5173\uff09</p> <p>Status\u7a97\u53e3</p> <p>\u56db\u4e2a\u6309\u94ae\u5206\u522b\u4e3a\uff1a\u5faa\u73af\u91c7\u6837\u3001\u6761\u4ef6\u89e6\u53d1\u91c7\u6837\u3001\u65e0\u6761\u4ef6\u6267\u884c<code>ILA</code>\u91c7\u6837\u3001\u505c\u6b62\u91c7\u6837\u6309\u94ae Core status\u8868\u793a<code>ILA</code>\u7684\u8fd0\u884c\u72b6\u6001</p>"},{"location":"zynq/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ol> <li>Zynq 7000 SoC Technical Reference Manual UG585 (v1.14) June 30, 2023</li> <li> <p>ZYNQ \u7684\u4e09\u79cdGPIO \uff1aMIO\u3001EMIO\u3001AXI</p> </li> <li> <p>zynq\u4e2d\u5404\u79cdGPIO\u65b9\u5f0f\u7684\u533a\u522b\uff1aMIO\uff0cEMIO\uff0cAXI_GPIO \u6838</p> </li> </ol>"},{"location":"programming/asm/","title":"Assembly Language","text":""},{"location":"programming/asm/#jgjngjljnl","title":"<code>JG/JNG/JL/JNL</code>","text":"asm function condition <code>JG/JNLE LABLE</code> \\(a &gt; b\\) <code>ZF=0 &amp;&amp; SF=OF</code> <code>JNG/JLE LABEL</code> \\(a \\leq b\\) <code>ZF=1 || SF\u2260OF</code> <code>JL/JNGE LABEL</code> \\(a &lt; b\\) <code>SF\u2260OF</code> <code>JNL/JGE LABEL</code> \\(a\\geq b\\) <code>SF=OF</code>"},{"location":"programming/c/","title":"C","text":""},{"location":"programming/c/#coding-error","title":"Coding Error","text":"<pre><code># include &lt;stdio.h&gt;\n\nint main()\n{\n    char* arr1 = \"\\xef\\xbf\\xbd\\xef\\xbf\\xbd\";\n    printf(\"%s\\n\", arr1);\n\n    char arr2[1];\n    printf(\"%s\\n\", arr2);\n\n    char* arr3;\n    arr3 = (char*)malloc(6);\n    printf(\"%s\\n\", arr3);\n\n    char* arr4 = \"\\xef\\xbb\\xef\\xbb\\xef\\xbb\";\n    printf(\"%s\\n\", arr4);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/#isc_lab","title":"ISC_Lab","text":"<ul> <li>ISC_Lab1</li> </ul> <pre><code>/**\n * ISC_Lab1: \u5927\u6574\u6570\u8fd0\u7b97\n * \u53ea\u4f7f\u7528\u5206\u652f\u3001\u5faa\u73af\u3001\u5c40\u90e8\u53d8\u91cf (\u4f7f\u7528\u6574\u6570\u7684\u4f4d\u5bbd\u81f3\u591a\u4e3a64\n * bit)\u3001\u8d4b\u503c\u8bed\u53e5\u3001\u4f4d\u8fd0\u7b97\u548c\u52a0\u51cf\u6cd5\u5b9e\u73b0 $a \\times b \\mod m$\n */\n\n#include &lt;stdint.h&gt;\n\nuint64_t multimod(uint64_t a, uint64_t b, uint64_t m) {\n    while (a &gt; m) {\n        a -= m;\n    }\n    while (b &gt; m) {\n        b -= m;\n    }\n    uint64_t result = 0;\n    uint64_t su = UINT64_MAX - m + 1;\n\n    for (uint64_t i = 64; i != 0; --i) {\n        // \u79fb\u4f4d\u65f6\u6ea2\u51fa\n        if (result &gt;&gt; 63) {\n            result = result &lt;&lt; 1;\n            result += su;\n        } else {\n            result = result &lt;&lt; 1;\n        }\n        result = (result &gt; m) ? (result - m) : result;\n\n        if ((a &gt;&gt; (i - 1)) &amp; 1) {\n            // \u52a0\u6cd5\u6ea2\u51fa(\u8003\u8651b\u59cb\u7ec8\u4e0d\u53d8, \u77ed\u8def\u51cf\u5c11\u91cd\u590d\u5224\u65ad)\n            if ((result &gt;&gt; 63 &amp; b &gt;&gt; 63) |\n                ((result &gt;&gt; 63 | b &gt;&gt; 63) &amp; (result &gt;&gt; 62 &amp; b &gt;&gt; 62))) {\n                result = result + b;\n                result += su;\n            } else {\n                result = result + b;\n            }\n        }\n        result = (result &gt; m) ? (result - m) : result;\n    }\n    result = (result &gt; m) ? (result - m) : result;\n\n    return result;\n}\n</code></pre>"},{"location":"programming/latex/","title":"\\(\\LaTeX\\)","text":"<pre><code>\\usepackage{url}\n\\usepackage{ctex}\n\\usepackage{tabu}\n\\usepackage{float}\n\\usepackage{amsthm}\n\\usepackage{amsmath}\n\\usepackage{xcolor}\n\\usepackage{array}\n\\usepackage{fancyhdr}\n\\usepackage{graphicx}\n\\usepackage{hyperref}\n\\usepackage{listings}\n\\usepackage{multirow}\n\\usepackage{tabularx}\n\\usepackage{longtable}\n\\usepackage{subcaption}\n\\usepackage{stackengine}\n\\usepackage{amsmath, amssymb}\n\\usepackage{titletoc, hyperref}\n\\usepackage[compress]{cite}\n\\usepackage[dvipdfm]{geometry}\n\n% \u94fe\u63a5\u989c\u8272\n\\hypersetup{\n    colorlinks=true,\n    linkcolor=red,\n    citecolor=green\n}\n</code></pre>"},{"location":"programming/latex/#_1","title":"\u9875\u9762\u5927\u5c0f","text":"<pre><code>\\geometry{a4paper,left=2.1cm,right=2.1cm,top=2.97cm,bottom=2.97cm}  % \u9875\u8fb9\u8ddd\n\\paperwidth 210mm\n\\paperheight 297mm\n</code></pre>"},{"location":"programming/latex/#_2","title":"\u9875\u7709","text":"<pre><code>\\pagestyle{fancy}\n\\fancyhead[L]{LEFT}\n\\fancyhead[C]{CENTER}\n\\fancyhead[R]{RIGHT}\n</code></pre>"},{"location":"programming/latex/#_3","title":"\u8868\u683c","text":"<ul> <li>\u5408\u5e76\u5355\u5143\u683c</li> <li>\u957f\u8868\u683c\u81ea\u52a8\u5206\u9875</li> <li>\u5355\u5143\u683c\u5185\u81ea\u52a8\u6362\u884c</li> </ul> <pre><code>\\setlength{\\tabcolsep}{2pt}           % \u8868\u683c\u5217\u95f4\u9694\n\\setlength\\LTleft{-1in}               % \u8ddd\u9875\u9762\u5de6\u8fb9\u754c\u8ddd\u79bb\n\\setlength\\LTright{-1in plus 1 fill}  % \u8ddd\u9875\u9762\u53f3\u8fb9\u754c\u8ddd\u79bb\n{\\small                               % \u8868\u683c\u5185\u5b57\u53f7\n    \\begin{longtable} {|c|c|p{5cm}|p{5cm}|l|}\n        \\caption{Title}\n        \\label{table:sheet}                                                                                                   \\\\\n        \\hline\n        % \u5355\u9875\u8868\u5934\n        \\multicolumn{2}{|c|}{\\textbf{1}} &amp; \\multicolumn{1}{|c|}{\\textbf{2}} &amp; \\multicolumn{1}{|c|}{\\textbf{3}} &amp; \\textbf{4}   \\\\\n        \\hline\n        \\endfirsthead\n\n        \\hline\n        % \u5206\u9875\u540e\u8868\u5934\n        \\multicolumn{2}{|c|}{\\textbf{1}} &amp; \\multicolumn{1}{|c|}{\\textbf{2}} &amp; \\multicolumn{1}{|c|}{\\textbf{3}} &amp; \\textbf{4}   \\\\\n        \\hline\n        \\endhead\n\n        \\hline\n        % \u5206\u9875\u540e\u5212\u7ebf\n        \\endfoot\n\n        \\hline\n        \\multirow{3}{*}{A}               &amp; a                                &amp;                                  &amp;            &amp; \\\\\n        \\cline{2-5}\n                                         &amp; b                                &amp;                                  &amp;            &amp; \\\\\n        \\cline{2-5}\n                                         &amp; c                                &amp;                                  &amp;            &amp; \\\\\n        \\hline\n        \\multirow{3}{*}{B}               &amp;                                  &amp;                                  &amp;            &amp; \\\\\n        \\cline{2-5}\n                                         &amp;                                  &amp;                                  &amp;            &amp; \\\\\n        \\cline{2-5}\n                                         &amp;                                  &amp;                                  &amp;            &amp; \\\\\n        \\hline\n        \\multicolumn{2}{|c|}{C}          &amp;                                  &amp;                                  &amp;              \\\\\n        \\hline\n    \\end{longtable}\n</code></pre>"},{"location":"programming/latex/#_4","title":"\u4ee3\u7801\u5757","text":"<pre><code>\\lstset{\n    basicstyle = \\fontsize{9}{9}\\tt,\n    keywordstyle = \\bfseries\n    numbers = left,                                   % \u884c\u53f7\n    numberstyle=\\tiny\\color[RGB]{5,5,5},,             % \u884c\u53f7\u6837\u5f0f\n    commentstyle=\\it\\color[RGB]{96,96,96},            % \u6ce8\u91ca\u6837\u5f0f\n    frame = lrtb,                                     % \u80cc\u666f\u8fb9\u6846\n    captionpos = t,\n    showspaces = false\n    showstringspaces = false,\n    flexiblecolumns,\n    rulesepcolor=\\color{red!20!green!20!blue!20},\n    escapeinside=``,\n    xleftmargin=2em,xrightmargin=2em, aboveskip=1em,  \n    framexleftmargin=1.5mm,\n    backgroundcolor=\\color[RGB]{250,250,250},         % \u80cc\u666f\u8272\n    keywordstyle=\\color{blue}\\bfseries,               % \u5173\u952e\u5b57\u989c\u8272\n    identifierstyle=\\bf,\n    stringstyle=\\rmfamily\\slshape\\color[RGB]{128,0,0},\n    language=c++                                      % \u8bed\u8a00\n}\n\n\\begin{lstlisting}\n    #include &lt;iostream&gt;\n    using namespace std;\n\n    int main()\n    {\n        cout &lt;&lt; \"Hello World!\" &lt;&lt; endl;\n        return 0;\n    }\n\\end{lstlisting}\n</code></pre>"},{"location":"programming/latex/#_5","title":"\u516c\u5f0f","text":""},{"location":"programming/latex/#_6","title":"\u6700\u4f18\u5316","text":"\\[ \\begin{equation} \\begin{aligned} \\label{P} &amp;\\max_{\\mathbf{w}, q}\\quad \\log_2{(1+\\dfrac{|(\\mathbf{h}_{IU}\\mathbf{Q}\\mathbf{H}_{AI}+\\mathbf{h}_{AU})\\mathbf{w}|^2}{\\sigma_{U}^2})} - \\log_2{(1+\\dfrac{|(\\mathbf{h}_{IE}\\mathbf{Q}\\mathbf{H}_{AI}+\\mathbf{h}_{AE})\\mathbf{w}|^2}{\\sigma_{E}^2})}\\\\ &amp;\\begin{array}{r@{\\quad}r@{}l@{\\quad}l} \\text{s.t.} &amp;||\\mathbf{w}||^2\\leq P_{AP}\\\\     &amp;|q_n|=1, \\forall n\\\\ \\end{array} \\end{aligned} \\end{equation} \\] <pre><code>\\begin{equation}\n\\begin{aligned} \\label{P}\n&amp;\\max_{\\mathbf{w}, q}\\quad \\log_2{(1+\\dfrac{|(\\mathbf{h}_{IU}\\mathbf{Q}\\mathbf{H}_{AI}+\\mathbf{h}_{AU})\\mathbf{w}|^2}{\\sigma_{U}^2})} - \\log_2{(1+\\dfrac{|(\\mathbf{h}_{IE}\\mathbf{Q}\\mathbf{H}_{AI}+\\mathbf{h}_{AE})\\mathbf{w}|^2}{\\sigma_{E}^2})}\\\\\n&amp;\\begin{array}{r@{\\quad}r@{}l@{\\quad}l}\n\\text{s.t.} &amp;||\\mathbf{w}||^2\\leq P_{AP}\\\\\n    &amp;|q_n|=1, \\forall n\\\\\n\\end{array}\n\\end{aligned}\n\\end{equation}\n</code></pre>"},{"location":"programming/latex/#_7","title":"\u6458\u8981","text":"<pre><code>\\newpage\n\\setcounter{page}{1}\n\\begin{abstract}\n    \u6458\u8981\n    \\noindent{\\textbf{\u5173\u952e\u8bcd\uff1a}\u5173\u952e\u8bcd}\n\\end{abstract}\n% \u76ee\u5f55\n\\tableofcontents\n</code></pre>"},{"location":"programming/matlab/","title":"MATLAB","text":"<ul> <li>awgn</li> <li>berawgn</li> <li>histogram</li> <li>kron</li> </ul> <ul> <li>FFT\u7ed8\u5236\u9891\u8c31\u56fe</li> </ul> <pre><code>plot(abs(fftshift(fft(  ))));  % fft\npwelch(  )                     % \u529f\u7387\u8c31\u5bc6\u5ea6\n</code></pre> <ul> <li>\u8bfb\u53d6CSV\u6587\u4ef6</li> </ul> <pre><code>f = 'iladata.csv';\ndata = csvread(f, 2, 5);  % \u7d22\u5f15\u4ece0\u5f00\u59cb\ni = data(:, 1);           % \u7d22\u5f15\u4ece1\u5f00\u59cb\nq = data(:, 2);           % \u7d22\u5f15\u4ece1\u5f00\u59cb\ns = i + 1j * q;\npwelch(s);\n</code></pre> <ul> <li>\u672c\u539f\u591a\u9879\u5f0f\uff08\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f\u3001\u751f\u6210\u591a\u9879\u5f0f\uff09</li> </ul> <pre><code>&gt;&gt; primpoly(10)\n\nPrimitive polynomial(s) = \n\nD^10+D^3+1\n\nans =\n\n        1033\n</code></pre> <ul> <li>m\u5e8f\u5217</li> </ul> <pre><code>function [pn] = mseq(coe)\n    len = 2 ^ (length(coe) - 1)-1;\n    pn = zeros(1, len);\n\n    lfsr = [zeros(1, (length(coe)-2)) 1];\n    for i = 1: len\n        pn(i) = lfsr(end);\n        lfsr_front = 0;\n        for j = (length(coe) - 1): -1: 1\n            lfsr_front = lfsr_front + coe(j + 1) * lfsr(j);\n        end\n        lfsr_front = mod(sum(lfsr_front), 2);\n        lfsr = [lfsr_front lfsr(1: end - 1)];\n    end\nend\n</code></pre> <ul> <li>\u53bb\u9891\u504f\u548c\u76f8\u504f</li> </ul> <pre><code>% \u53bb\u9891\u504f\nacc = 2 ^ 24;\nmf_dout2 = mf_dout .^ 2;\nmf_dout2_fft = fft(mf_dout2, acc);\nmf_dout2_fft_abs = abs(mf_dout2_fft.').^2;\nmf_dout2_fft_abs = [mf_dout2_fft_abs(acc / 2 + 2 : acc), mf_dout2_fft_abs(1 : acc / 2 + 1)];\nidx_max = find(mf_dout2_fft_abs == max(mf_dout2_fft_abs)) - acc / 2;\ncarrier = exp(-1j * 2 * pi * idx_max / acc * (1 : length(mf_dout)));\ndata_comp_down = mf_dout2.' .* carrier;\n\n% \u53bb\u76f8\u504f\nphase_estm = atan2(sum(imag(data_comp_down)), sum(real(data_comp_down))) / 2;\ncarrier = exp(-1j * 2 * pi * idx_max / 2 / acc * (1 : length(mf_dout))) * exp(-1j * phase_estm);\nmf_dout1 = mf_dout.' .* carrier;\n</code></pre>"},{"location":"programming/python/","title":"Python","text":""},{"location":"programming/python/#socket-programming","title":"Socket Programming","text":"<ul> <li><code>server</code></li> </ul> <pre><code>import socket\nimport threading\n\n\ndef serverSocket(host, port):\n    socket_server = socket.socket()\n    socket_server.bind((host, port))\n    socket_server.listen(5)\n    print(f\"Listening...\")\n    num = 0\n    while True:\n        num += 1\n        conn, addr = socket_server.accept()\n        print(f\"{num}: Received a message from client {addr}\")\n        client_handler = threading.Thread(\n            target=handleClient, args=(conn, addr, num))\n        client_handler.start()\n\n\ndef handleClient(conn, addr, num):\n    while True:\n        data_from_client: str = conn.recv(1024).decode(\"UTF-8\")\n        print(f\"{num}: The message from {addr} is {data_from_client}.\")\n        msg = input(f\"{num}: Enter the message replied to client {addr}: \")\n        if msg == 'exit':\n            break\n        conn.send(msg.encode(\"UTF-8\"))\n    conn.close()\n\n\nif __name__ == '__main__':\n    server_host = input(\"Please enter server IP: \")\n    server_port = int(input(\"Please enter server port: \"))\n    serverSocket(server_host, server_port)\n</code></pre> <ul> <li><code>client</code></li> </ul> <pre><code>import socket\n\n\ndef create_client(host, port):\n    socket_client = socket.socket()\n    socket_client.connect((host, port))\n    while True:\n        msg = input(f\"Enter the message sent to server ({host}:{port}): \")\n        if msg == \"exit\":\n            break\n        socket_client.send(msg.encode(\"UTF-8\"))\n        response = socket_client.recv(1024).decode(\"UTF-8\")\n        print(f\"The response from server ({host}:{port}) is {response}\")\n    socket_client.close()\n\n\nif __name__ == '__main__':\n    server_host = input(\"Please enter server IP: \")\n    server_port = int(input(\"Please enter server port: \"))\n    create_client(server_host, server_port)\n</code></pre>"},{"location":"programming/python/#list","title":"List","text":"<p>Only the outermost for-expression is evaluated immediately, the other expressions are deferred until the generator is run.  \u2014\u2014PEP 289</p> <pre><code>old_list = [1, 2, 3]\nnew_list = (i for i in old_list if i in old_list)\nold_list = [0, 1, 2]\nprint(list(new_list))\n\n# old_list1 = [1, 2, 3]\n# old_list2 = [0, 1, 2]\n# new_list = (i for i in old_list1 if i in old_list2)\n# print(list(new_list))\n\n# old_list = [1, 2, 3]\n#\n# def __gen(a):\n#     for i in a:\n#         if i in old_list:\n#             yield i\n#\n# g = __gen(iter(old_list))\n# old_list = [0, 1, 2]\n# print(list(g))\n</code></pre>"},{"location":"programming/python/#not-bug","title":"Not Bug","text":"<ul> <li>Normal Use</li> </ul> <pre><code>config = {\"KEY\": \"admin\"}\n\nclass User(object):\n    def __init__(self, name):\n        self.name = name\n\n\nif __name__ == \"__main__\":\n    user = User(\"Euler0525\")\n    s = \"Hello {}!\".format(user.name)\n    print(s)\n\n# Hello Euler0525!\n</code></pre> <ul> <li>Malicious Use</li> </ul> <pre><code>config = {\"KEY\": \"admin\"}\n\nclass User(object):\n    def __init__(self, name):\n        self.name = name\n\n\nif __name__ == \"__main__\":\n    user = User(\"Euler0525\")\n    s = \"Hello {}!\".format(user.__class__.__init__.__globals__)\n    print(s)\n\n# Hello {'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fdd2d6a10f0&gt;, '__spec__': None, '__annotations__': {}, '__builtins__': &lt;module 'builtins' (built-in)&gt;, '__file__': '/root/tmp/main.py', '__cached__': None, 'config': {'KEY': 'admin'}, 'User': &lt;class '__main__.User'&gt;, 'user': &lt;__main__.User object at 0x7fdd2d6db5b0&gt;}!\n</code></pre>"},{"location":"programming/python/#serialization-and-deserialization","title":"Serialization And Deserialization","text":"<ul> <li>Normal Use</li> </ul> <pre><code>import pickle\n\ndata = [\"aa\", \"bb\", \"cc\"]\np = pickle.dumps(data)\nprint(p)\n# b'\\x80\\x04\\x95\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\x00]\\x94(\\x8c\\x02aa\\x94\\x8c\\x02bb\\x94\\x8c\\x02cc\\x94e.'\n\nd = pickle.loads(p)\nprint(d)\n# ['aa', 'bb', 'cc']\n</code></pre> <ul> <li>Malicious Use</li> </ul> <p>The <code>__reduce__</code> method in the Python class (the return value is a tuple) is automatically called when deserialization occurs.</p> <pre><code>class A(object):\n    def __reduce__(self):\n        return (os.system,(\"whoami\",))\n\na = A()\np = pickle.dumps(a)\npickle.loads(p)\n# root\n</code></pre> <pre><code># Default argument value is mutable\nclass Player(object):\n    def __init__(self, name: str, assets=None):\n        if assets is None:\n            assets = []\n        self.name = name\n        self.assets = assets\n\n\n# class Player(object):\n#     def __init__(self, name: str, assets=[]):\n#         self.name = name\n#         self.assets = assets\n</code></pre> <ul> <li>\u5217\u8868\u6269\u5c55</li> </ul> <pre><code>l = []\nfor i in range(5):\n    l.append(i + 1)\n    print(l)\n    print(l.__sizeof__())\n    print(\"********************\")\n\nl1 = [1, 2, 3, 4]\nprint(l.__sizeof__())\n\n\n[1]\n72\n********************\n[1, 2]\n72\n********************\n[1, 2, 3]\n72\n********************\n[1, 2, 3, 4]\n72\n********************\n[1, 2, 3, 4, 5]\n104\n********************\n104\n</code></pre> <ul> <li>\u5b50\u53e5\u7684\u6267\u884c\u987a\u5e8f</li> </ul> <pre><code>arr = [1, 8, 15]\ng = (x for x in arr if arr.count(x) &gt; 0)\narr = [2, 8, 22]\nprint(list(g))  # [8]\n</code></pre> <p>\u5728\u751f\u6210\u8868\u8fbe\u5f0f\u4e2d\uff0c<code>in</code>\u5728\u58f0\u660e\u65f6\u6267\u884c\uff0c\u6761\u4ef6\u5b50\u53e5\u5728\u8fd0\u884c\u65f6\u6267\u884c\u3002</p> <pre><code>arr_1 = [1, 2, 3, 4]\ng1 = (x for x in arr_1)\narr_1 = [1, 2, 3, 4, 5]\narr_2 = [1, 2, 3, 4]\ng2 = (x for x in arr_2)\narr_2[:] = [1, 2, 3, 4, 5]\nprint(list(g1))  # [1, 2, 3, 4]\nprint(list(g2))  # [1, 2, 3, 4, 5]\n</code></pre> <ol> <li><code>arr_1</code>\u88ab\u7ed1\u5b9a\u5230\u65b0\u5bf9\u8c61<code>[1, 2, 3, 4, 5]</code>\uff0c\u4f46<code>in</code>\u5728\u58f0\u660e\u65f6\u6267\u884c\uff0c\u6240\u4ee5\u4ecd\u7136\u5f15\u7528\u65e7\u5bf9\u8c61\uff1b</li> <li><code>arr_2</code>\u7528\u5207\u7247\u5c06\u65e7\u5bf9\u8c61\u539f\u5730\u66f4\u65b0\u4e3a<code>[1, 2, 3, 4, 5]</code>\uff0c\u56e0\u6b64<code>g2</code>\u4e0e<code>arr_2</code>\u5f15\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61\uff1b</li> </ol>"},{"location":"programming/verilog/","title":"Verilog","text":"<ul> <li>PS\u7aef\u8ba1\u65f6\u5668</li> </ul> <pre><code>XTime tEnd, tCur;\nu32 tUsed;\nXTime_GetTime(&amp;tCur);\n/******  Start ******/\n// Coding...\n/******   End  ******/\nXTime_GetTime(&amp;tEnd);\ntUsed = ((tEnd - tCur) * 1000000) / (COUNTS_PER_SECOND);\nxil_printf(\"(Time elapsed is %d us)\\r\\n\", tUsed);\n</code></pre> <ul> <li>\u4fe1\u53f7\u8fb9\u6cbf\u68c0\u6d4b</li> </ul> <pre><code>`timescale 1ns / 1ps\n\n\nmodule edge_detection(\n    input clk,\n    input rst_n,\n    input edge_pin,\n\n    output edge_neg\n);\n\nreg  edge_d0;\nreg  edge_d1;\n\nreg edge_neg_pin0;\nreg edge_neg_01;\n\n// wire edge_neg_pin0;\n// wire edge_neg_01;\n// assign edge_neg_pin0 = edge_pin &amp;&amp; ~edge_d0;\n// assign edge_neg_01 = edge_d1 &amp;&amp; ~edge_d0;\n\nalways@(posedge clk) begin\n    if(rst_n == 1'b0) begin\n        edge_d0 &lt;= 1'b1;\n        edge_d1 &lt;= 1'b1;\n    end else begin\n        edge_d0 &lt;= edge_pin;\n        edge_d1 &lt;= edge_d0;\n    end\nend\n\nalways @(posedge clk ) begin\n    if(rst_n == 1'b0) begin\n        edge_neg_pin0 &lt;= 1'b0;\n        edge_neg_01 &lt;= 1'b0;\n    end else begin\n        if (edge_pin == 1'b0 &amp;&amp; edge_d0 == 1'b1)\n            edge_neg_pin0 &lt;= 1'b1;\n        else\n            edge_neg_pin0 &lt;= 1'b0;\n        if (edge_d0 == 1'b0 &amp;&amp; edge_d1 == 1'b1)\n            edge_neg_01 &lt;= 1'b1;\n        else\n            edge_neg_01 &lt;= 1'b0;\n    end\nend\n\n// assign edge_neg  = edge_neg_01;\n\nendmodule\n</code></pre> <ul> <li>\u4fdd\u5b58\u81f3<code>.txt</code>\u6587\u4ef6</li> </ul> <pre><code>// .tb\ninteger f;\ninitial begin\n    f = $fopen(\"f.txt\", \"w\");\nend\n\nalways@(posedge clk) begin\n    f = $fopen(\"f.txt\", \"a+\");\n    $fwrite(f, \"%d\\n\", $signed(  ));\n    $fclose(f);\nend\n</code></pre> <ul> <li>Adder100i</li> </ul> <pre><code>module top_module(\n    input [99:0] a,\n    input [99:0] b,\n    input cin,\n\n    output [99:0] cout,\n    output [99:0] sum\n);\n    adder u_adder0(\n        .a(a[0]),\n        .b(b[0]),\n        .cin(cin),\n        .sum(sum[0]),\n        .cout(cout[0])\n    );\n    generate\n        genvar i;\n        for (i = 1; i &lt; 100; i = i + 1) begin: full_adder\n            adder u_adder(\n                .a(a[i]),\n                .b(b[i]),\n                .cin(cout[i-1]),\n                .sum(sum[i]),\n                .cout(cout[i])\n            );\n        end\n    endgenerate\n\nendmodule\n\nmodule adder (\n    input a,\n    input b,\n    input cin,\n\n    output cout,\n    output sum\n);\n    assign sum = a ^ b ^ cin;\n    assign cout = (a &amp; b) | (a &amp; cin) | (b &amp; cin);\n\nendmodule //adder\n</code></pre> <ul> <li>m\u5e8f\u5217</li> </ul> <pre><code>`timescale 1ns / 1ps\n\n\nmodule test(\n    input   clk   ,\n    input   rst_n ,\n    output  m\n);\n\n    reg  [3:0] ser = 4'b1000;\n    reg ser_4 = 1'b0;\n    always@(posedge clk)\n    begin\n        if(!rst_n) begin\n            ser &lt;= 4'b1000;\n            ser_4 &lt;= 1'b0;\n        end\n        else begin\n            ser_4 &lt;= (ser[3] ^ ser[1]);\n            ser &lt;= {ser_4, ser[3:1]};\n        end\n    end\n    assign m = ser[0];\n\nendmodule\n</code></pre> <ul> <li>\u56db\u79cd\u4f11\u7720\u6a21\u5f0f</li> </ul> <p>\u5728\u6570\u5b57\u4fe1\u53f7\u63a7\u5236\u5668\uff08DSC\uff09\u6216\u5fae\u63a7\u5236\u5668\u4e2d\uff0c\u5e38\u89c1\u7684\u4f11\u7720\u6a21\u5f0f\u5305\u62ec<code>IDLE</code>\u3001<code>SLEEP</code>\u3001<code>DOZE</code>\u548c<code>STOP</code>\u3002\u8fd9\u4e9b\u6a21\u5f0f\u5177\u6709\u4e0d\u540c\u7684\u529f\u8017\u7ea7\u522b\u548c\u529f\u80fd\u72b6\u6001\u3002\u4e0b\u9762\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\uff1a</p> <ul> <li> <p>IDLE\u6a21\u5f0f\uff1aIDLE\u6a21\u5f0f\u662f\u6700\u4f4e\u529f\u8017\u7684\u4f11\u7720\u6a21\u5f0f\u4e4b\u4e00\u3002\u5728IDLE\u6a21\u5f0f\u4e0b\uff0c\u5904\u7406\u5668\u6838\u5fc3\u505c\u6b62\u6267\u884c\u6307\u4ee4\uff0c\u4f46\u5176\u4ed6\u5916\u8bbe\u548c\u65f6\u949f\u7ee7\u7eed\u8fd0\u884c\u3002\u5904\u7406\u5668\u6838\u5fc3\u53ef\u4ee5\u7acb\u5373\u6062\u590d\u5230\u6b63\u5e38\u5de5\u4f5c\u72b6\u6001\uff0c\u5e76\u4eceIDLE\u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7ee7\u7eed\u6267\u884c\u3002</p> </li> <li> <p>SLEEP\u6a21\u5f0f\uff1aSLEEP\u6a21\u5f0f\u6bd4IDLE\u6a21\u5f0f\u529f\u8017\u7a0d\u9ad8\u3002\u5728SLEEP\u6a21\u5f0f\u4e0b\uff0c\u5904\u7406\u5668\u6838\u5fc3\u505c\u6b62\u6267\u884c\u6307\u4ee4\uff0c\u5e76\u5173\u95ed\u5927\u90e8\u5206\u5916\u8bbe\u548c\u65f6\u949f\uff0c\u4ee5\u964d\u4f4e\u529f\u8017\u3002\u4f7f\u7528\u5524\u9192\u6e90\uff08\u5982\u5b9a\u65f6\u5668\u4e2d\u65ad\u6216\u5916\u90e8\u89e6\u53d1\uff09\u53ef\u4ee5\u5c06\u5904\u7406\u5668\u6838\u5fc3\u4eceSLEEP\u6a21\u5f0f\u4e2d\u5524\u9192\u3002</p> </li> <li> <p>DOZE\u6a21\u5f0f\uff1aDOZE\u6a21\u5f0f\u63d0\u4f9b\u4e86\u66f4\u4f4e\u7684\u529f\u8017\u6c34\u5e73\u3002\u5728DOZE\u6a21\u5f0f\u4e0b\uff0c\u5904\u7406\u5668\u6838\u5fc3\u548c\u7cfb\u7edf\u65f6\u949f\u4f1a\u8fdb\u4e00\u6b65\u964d\u4f4e\u9891\u7387\u4ee5\u51cf\u5c11\u529f\u8017\uff0c\u540c\u65f6\u4e00\u4e9b\u5916\u8bbe\u53ef\u80fd\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002\u901a\u8fc7\u5524\u9192\u6e90\u89e6\u53d1\uff0c\u5904\u7406\u5668\u6838\u5fc3\u53ef\u4ee5\u4eceDOZE\u6a21\u5f0f\u4e2d\u8fc5\u901f\u5524\u9192\u3002</p> </li> <li> <p>STOP\u6a21\u5f0f\uff1aSTOP\u6a21\u5f0f\u63d0\u4f9b\u4e86\u6700\u4f4e\u529f\u8017\u7684\u4f11\u7720\u6a21\u5f0f\u3002\u5728STOP\u6a21\u5f0f\u4e0b\uff0c\u5904\u7406\u5668\u6838\u5fc3\u548c\u5927\u90e8\u5206\u5916\u8bbe\u90fd\u88ab\u5173\u95ed\uff0c\u65f6\u949f\u4e5f\u505c\u6b62\u8fd0\u884c\u3002\u53ea\u6709\u7279\u5b9a\u7684\u5524\u9192\u6e90\u80fd\u591f\u4f7f\u5904\u7406\u5668\u6838\u5fc3\u4eceSTOP\u6a21\u5f0f\u4e2d\u6062\u590d\u3002</p> </li> </ul> <p>IDLE\u6a21\u5f0f\u662f\u6700\u4f4e\u529f\u8017\u7684\u7b80\u5355\u4f11\u7720\u6a21\u5f0f\uff0c\u53ea\u505c\u6b62\u5904\u7406\u5668\u6838\u5fc3\u7684\u6307\u4ee4\u6267\u884c\uff1bSLEEP\u6a21\u5f0f\u8fdb\u4e00\u6b65\u964d\u4f4e\u529f\u8017\uff0c\u5173\u95ed\u5927\u90e8\u5206\u5916\u8bbe\u548c\u65f6\u949f\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5524\u9192\u6e90\u5feb\u901f\u6062\u590d\uff1bDOZE\u6a21\u5f0f\u63d0\u4f9b\u4e86\u66f4\u4f4e\u7684\u529f\u8017\u6c34\u5e73\uff0c\u964d\u4f4e\u5904\u7406\u5668\u6838\u5fc3\u548c\u7cfb\u7edf\u65f6\u949f\u7684\u9891\u7387\uff0c\u540c\u65f6\u4fdd\u6301\u67d0\u4e9b\u5916\u8bbe\u7684\u6d3b\u52a8\u6027\uff1bSTOP\u6a21\u5f0f\u662f\u6700\u4f4e\u529f\u8017\u7684\u4f11\u7720\u6a21\u5f0f\uff0c\u51e0\u4e4e\u5173\u95ed\u6240\u6709\u5916\u8bbe\u548c\u65f6\u949f\uff0c\u53ea\u6709\u7279\u5b9a\u7684\u5524\u9192\u6e90\u624d\u80fd\u5524\u9192\u5904\u7406\u5668\u6838\u5fc3\u3002</p> <ul> <li>AXI valid-ready\u63e1\u624b\u534f\u8bae</li> </ul> <pre><code>// \u7b80\u5355\u7406\u89e3\u4e3a\ns_axis_tready  // output \u51c6\u5907\u597d\u63a5\u6536\u6570\u636e\ns_axis_tvalid  // input  \u5199\u5165\u4f7f\u80fd\n               // \u2193\nm_axis_tvalid  // output \u53ef\u4ee5\u53d1\u9001\u6570\u636e\nm_axis_tready  // input  \u53ef\u4ee5\u53d1\u9001\n</code></pre> <ul> <li>\u590d\u4f4d\uff1a\u5f02\u6b65\u590d\u4f4d\u3001\u540c\u6b65\u91ca\u653e</li> </ul> <pre><code>module async_reset_sync_release (\n    input wire clk,      // \u65f6\u949f\u4fe1\u53f7\n    input wire rst_n,    // \u5f02\u6b65\u590d\u4f4d\u4fe1\u53f7\uff0c\u4f4e\u7535\u5e73\u6709\u6548\n    input wire data_in,  // \u8f93\u5165\u6570\u636e\n    output reg data_out  // \u8f93\u51fa\u6570\u636e\n);\n\n    reg rst_sync_1;      // \u7b2c\u4e00\u7ea7\u540c\u6b65\u5bc4\u5b58\u5668\n    reg rst_sync_2;      // \u7b2c\u4e8c\u7ea7\u540c\u6b65\u5bc4\u5b58\u5668\n\n    always @(posedge clk or negedge rst_n) begin\n        if (!rst_n) begin\n            rst_sync_1 &lt;= 1'b0;  // \u5f02\u6b65\u590d\u4f4d\n            rst_sync_2 &lt;= 1'b0;  // \u5f02\u6b65\u590d\u4f4d\n        end else begin\n            rst_sync_1 &lt;= 1'b1;  // \u540c\u6b65\u91ca\u653e\n            rst_sync_2 &lt;= rst_sync_1;  // \u540c\u6b65\u91ca\u653e\n        end\n    end\n\n    always @(posedge clk or negedge rst_sync_2) begin\n        if (!rst_sync_2) begin\n            data_out &lt;= 1'b0;  // \u540c\u6b65\u590d\u4f4d\n        end else begin\n            data_out &lt;= data_in;  // \u6b63\u5e38\u6570\u636e\u4f20\u8f93\n        end\n    end\n\nendmodule\n</code></pre> <ul> <li>PRBS(Pseudo-Random Binary Sequence)</li> </ul> <p>\u4f7f\u7528PRBS\u8fd9\u79cd\u4f2a\u968f\u673a\u7801\u8fdb\u884c\u9ad8\u901f\u4e32\u884c\u901a\u9053\u7684\u6d4b\u8bd5\uff0c\u4e3b\u8981\u6d4b\u8bd5\u8bef\u7801\u7387\u7b49\u60c5\u51b5\u3002PRBS \u7684\u7801\u6d41\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5177\u6709\u201c\u968f\u673a\u6570\u636e\u201d\u7684\u7279\u6027\uff0c\u201c0\u201d\u548c\u201c1\u201d\u968f\u673a\u51fa\u73b0\uff0c\u8fd9\u79cd\u7801\u6d41\u7684\u9891\u8c31\u7279\u5f81\u548c\u767d\u566a\u58f0\u975e\u5e38\u63a5\u8fd1\uff0c\u6240\u8c13\u201c\u767d\u566a\u58f0\u201d\u5c31\u662f\u5728\u4e00\u4e2a\u6bd4\u8f83\u5bbd\u7684\u9891\u57df\u91cc\u529f\u7387\u5bc6\u5ea6\u8c31\u5747\u5300\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u7684\u9891\u7387\u90fd\u5177\u6709\u76f8\u540c\u7684\u80fd\u91cf\uff0c\u56e0\u6b64\u8be5\u7801\u578b\u80fd\u591f\u6a21\u62df\u5404\u79cd\u4e0d\u540c\u9891\u7387\u6570\u636e\u7ec4\u6210\u7684\u60c5\u51b5\uff0c\u4f7f\u6d4b\u8bd5\u66f4\u7b26\u5408\u771f\u5b9e\u7684\u60c5\u51b5\u3002</p> <p>\u5e38\u7528\u7684\u6709\u9636\u65707, 9, 11, 15, 20, 23, 31</p> <pre><code>`timescale 1ns/1ps\n\n\n//////////////////////////////////////////////////////////////////////////////////\n// Company: BIT\n// Engineer: Liu Yubo(Modified)\n// Author  : Daniele Riccardi\n//\n// Create Date: 2024/09/12 23:32:00\n// Design Name:\n// Module Name: prbs_gen_or_check\n// Project Name:\n// Target Devices:\n// Tool Versions: Vivado 2019.1\n// Description:\n//--------------------------------------------------------------------------\n// DESCRIPTION\n//--------------------------------------------------------------------------\n//  This module generates or check a PRBS pattern. The following table shows how\n//  to set the PARAMETERS for compliance to ITU-T Recommendation O.150 Section 5.\n//\n//  When the CHK_MODE is \"false\", it uses a  LFSR strucure to generate the\n//  PRBS pattern.\n//  When the CHK_MODE is \"true\", the incoming data are loaded into prbs registers\n//  and compared with the locally generated PRBS\n//\n// Dependencies:\n//\n// Revision:\n// Revision 0.01 - File Created\n// Additional Comments:\n//--------------------------------------------------------------------------\n// NOTES\n//--------------------------------------------------------------------------\n//\n//\n//   Set paramaters to the following values for a ITU-T compliant PRBS\n//------------------------------------------------------------------------------\n// POLY_LENGHT POLY_TAP INV_PATTERN  || nbr of   bit seq.   max 0      feedback\n//                                   || stages    length  sequence      stages\n//------------------------------------------------------------------------------\n//     7          6       false      ||    7         127      6 ni        6, 7   (*)\n//     9          5       false      ||    9         511      8 ni        5, 9\n//    11          9       false      ||   11        2047     10 ni        9,11\n//    15         14       true       ||   15       32767     15 i        14,15\n//    20          3       false      ||   20     1048575     19 ni        3,20\n//    23         18       true       ||   23     8388607     23 i        18,23\n//    29         27       true       ||   29   536870911     29 i        27,29\n//    31         28       true       ||   31  2147483647     31 i        28,31\n//\n// i=inverted, ni= non-inverted\n// (*) non standard\n//----------------------------------------------------------------------------\n//\n// In the generated parallel PRBS, LSB is the first_n generated bit, for example\n//      if the PRBS serial stream is : 000001111011... then\n//      the generated PRBS with a parallelism of 3 bit becomes:\n//        prbs_dout(2) = 0  1  1  1 ...\n//        prbs_dout(1) = 0  0  1  1 ...\n//        prbs_dout(0) = 0  0  1  0 ...\n// In the received parallel PRBS, LSB is oldest bit received\n//\n// RESET pin is not needed for power-on reset : all registers are properly inizialized\n// in the source code.\n//\n//////////////////////////////////////////////////////////////////////////////////\n\n\n//------------------------------------------------------------------------------\n// PARAMETERS\n//------------------------------------------------------------------------------\n// CHK_MODE    : true  =&gt; check mode\n//               false =&gt; generate mode\n// INV_PATTERN : true : invert prbs pattern\n//               in \"generate mode\", the generated prbs is inverted bit-wise at outputs\n//               in \"check mode\", the input data are inverted before processing\n// NBITS       : bus size of prbs_din and prbs_dout\n// POLY_LENGTH : length of the polynomial (= number of shift register stages)\n// POLY_TAP    : intermediate stage that is xor-ed with the last stage to generate to next prbs bit\n//\n//------------------------------------------------------------------------------\n// PINS\n//------------------------------------------------------------------------------\n//\n// prbs_en     : input wire  enable/pause pattern generation/check\n// prbs_din    : input wire  inject error           ( in generate mode )\n//                           data to be checked     ( in check mode    )\n// prbs_dout   : output reg  generated prbs pattern ( in generate mode )\n//                           error found            ( in check mode    )\n//\n\nmodule prbs_gen_or_check #(\n  parameter                 CHK_MODE    = 0  ,\n  parameter                 INV_PATTERN = 0  ,\n  parameter                 NBITS       = 32 ,\n  parameter                 POLY_LENGTH = 31 ,\n  parameter                 POLY_TAP    = 28\n)(\n  input  wire               clk       ,\n  input  wire               rst_n     ,\n  input  wire               prbs_en   ,\n  input  wire [NBITS - 1:0] prbs_din  ,\n  output reg  [NBITS - 1:0] prbs_dout\n);\n  //--------------------------------------------\n  // Internal variables\n  //--------------------------------------------\n\n  wire [1:POLY_LENGTH] prbs       [NBITS:0]               ;\n  wire [NBITS - 1:0]   prbs_din_i                         ;\n  wire [NBITS - 1:0]   prbs_xor_a                         ;\n  wire [NBITS - 1:0]   prbs_xor_b                         ;\n  wire [NBITS:1]       prbs_msb                           ;\n  reg  [1:POLY_LENGTH] prbs_reg   = {(POLY_LENGTH){1'b1}} ;\n\n  assign prbs_din_i = INV_PATTERN == 0 ? prbs_din : ( ~prbs_din);\n  assign prbs[0] = prbs_reg;\n\n  genvar i;\n  generate for (i = 0; i &lt; NBITS; i = i + 1) begin : g1\n    assign prbs_xor_a[i] = prbs[i][POLY_TAP] ^ prbs[i][POLY_LENGTH];\n    assign prbs_xor_b[i] = prbs_xor_a[i] ^ prbs_din_i[i];\n    assign prbs_msb[i+1] = CHK_MODE == 0 ? prbs_xor_a[i]  :  prbs_din_i[i];\n    assign prbs[i+1]     = {prbs_msb[i+1] , prbs[i][1:POLY_LENGTH-1]};\n  end\n  endgenerate\n\n  always @(posedge clk) begin\n    if(rst_n == 1'b0) begin\n      prbs_reg  &lt;= {POLY_LENGTH{1'b1}};\n      prbs_dout &lt;= {NBITS{1'b1}};\n    end\n    else if(prbs_en == 1'b1) begin\n      prbs_dout &lt;= prbs_xor_b;\n      prbs_reg  &lt;= prbs[NBITS];\n    end\n  end\n\nendmodule\n</code></pre>"}]}